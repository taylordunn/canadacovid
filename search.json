[{"path":[]},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to canadacovid","title":"Contributing to canadacovid","text":"outlines propose change canadacovid. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to canadacovid","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to canadacovid","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to canadacovid","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"taylordunn/canadacovid\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to canadacovid","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to canadacovid","text":"Please note canadacovid project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://taylordunn.github.io/canadacovid/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 canadacovid authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://taylordunn.github.io/canadacovid/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with canadacovid","title":"Getting help with canadacovid","text":"Thanks using canadacovid! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://taylordunn.github.io/canadacovid/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with canadacovid","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://taylordunn.github.io/canadacovid/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with canadacovid","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://taylordunn.github.io/canadacovid/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with canadacovid","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://taylordunn.github.io/canadacovid/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Taylor Dunn. Author, maintainer.","code":""},{"path":"https://taylordunn.github.io/canadacovid/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dunn T (2022). canadacovid: API Wrapper Canadian COVID-19 Tracker. https://github.com/taylordunn/canadacovid, https://taylordunn.github.io/canadacovid/.","code":"@Manual{,   title = {canadacovid: API Wrapper for the Canadian COVID-19 Tracker},   author = {Taylor Dunn},   year = {2022},   note = {https://github.com/taylordunn/canadacovid, https://taylordunn.github.io/canadacovid/}, }"},{"path":"https://taylordunn.github.io/canadacovid/index.html","id":"canadacovid","dir":"","previous_headings":"","what":"API Wrapper for the Canadian COVID-19 Tracker","title":"API Wrapper for the Canadian COVID-19 Tracker","text":"goal canadacovid provide wrapper around API service COVID-19 Tracker Canada. see package developed, see post.","code":""},{"path":"https://taylordunn.github.io/canadacovid/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"API Wrapper for the Canadian COVID-19 Tracker","text":"Install canadacovid CRAN: can install development version canadacovid GitHub:","code":"install.packages(\"canadacovid\") #install.packages(\"remotes\") remotes::install_github(\"taylordunn/canadacovid\")"},{"path":"https://taylordunn.github.io/canadacovid/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"API Wrapper for the Canadian COVID-19 Tracker","text":"get latest summary data: default, returns aggregate data Canada. Provide split argument get summary “province” “region”: Day--day reports retrieved get_reports: function comes number arguments return specific data:","code":"library(canadacovid) library(tidyverse)  summary_overall <- get_summary() glimpse(summary_overall) #> Rows: 1 #> Columns: 22 #> $ last_updated                <dttm> 2022-01-20 18:10:02 #> $ latest_date                 <date> 2022-01-20 #> $ change_cases                <int> 23167 #> $ change_fatalities           <int> 210 #> $ change_tests                <int> 81335 #> $ change_hospitalizations     <int> -6 #> $ change_criticals            <int> 8 #> $ change_recoveries           <int> 30579 #> $ change_vaccinations         <int> 198559 #> $ change_vaccinated           <int> 14000 #> $ change_boosters_1           <int> 187385 #> $ change_vaccines_distributed <int> 0 #> $ total_cases                 <int> 2866146 #> $ total_fatalities            <int> 32217 #> $ total_tests                 <int> 55885939 #> $ total_hospitalizations      <int> 10609 #> $ total_criticals             <int> 1203 #> $ total_recoveries            <int> 2520615 #> $ total_vaccinations          <int> 75105874 #> $ total_vaccinated            <int> 29729902 #> $ total_boosters_1            <int> 13229157 #> $ total_vaccines_distributed  <int> 84909134 summary_province <- get_summary(split = \"province\") glimpse(summary_province) #> Rows: 13 #> Columns: 23 #> $ last_updated                <dttm> 2022-01-20 18:10:02, 2022-01-20 18:10:02,~ #> $ province                    <chr> \"ON\", \"QC\", \"NS\", \"NB\", \"MB\", \"BC\", \"PE\", ~ #> $ date                        <chr> \"2022-01-20\", \"2022-01-20\", \"2022-01-20\", ~ #> $ change_cases                <int> 7757, 6528, 696, 488, 850, 2150, 0, 1171, ~ #> $ change_fatalities           <int> 75, 98, 4, 3, 7, 15, 0, 0, 8, 0, 0, 0, 0 #> $ change_tests                <int> 42907, 0, 4459, 4580, 2450, 12274, 0, 3513~ #> $ change_hospitalizations     <int> -71, -14, 2, 1, 34, -4, 0, 16, 30, 0, 0, 0~ #> $ change_criticals            <int> 5, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0 #> $ change_recoveries           <int> 12578, 0, 0, 392, 6809, 3174, 0, 1092, 653~ #> $ change_vaccinations         <int> 104845, 0, 18072, 10130, 8531, 59042, 0, 2~ #> $ change_vaccinated           <int> 9205, 0, 306, 307, 913, 2001, 0, 1263, 5, ~ #> $ change_boosters_1           <int> 86274, 0, 17233, 9159, 6739, 54080, 0, 0, ~ #> $ change_vaccines_distributed <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> $ total_cases                 <int> 977194, 818947, 31874, 24489, 113196, 3057~ #> $ total_fatalities            <int> 10801, 12639, 128, 199, 1485, 2520, 2, 961~ #> $ total_tests                 <int> 22288866, 15682022, 1674063, 666919, 13574~ #> $ total_hospitalizations      <int> 4061, 3411, 85, 124, 665, 891, 8, 215, 113~ #> $ total_criticals             <int> 594, 285, 12, 12, 50, 115, 4, 23, 108, 0, ~ #> $ total_recoveries            <int> 887023, 747819, 17152, 19899, 75969, 26576~ #> $ total_vaccinations          <int> 29769719, 16953912, 1998064, 1575232, 2681~ #> $ total_vaccinated            <int> 11570076, 6734670, 798609, 626997, 1048824~ #> $ total_boosters_1            <int> 5793578, 2844797, 327601, 261910, 488289, ~ #> $ total_vaccines_distributed  <int> 33390981, 19822969, 2243162, 1756685, 2987~ reports_overall <- get_reports() #> Called from: get_reports() #> debug: reports %>% dplyr::mutate(dplyr::across(tidyselect::matches(\"^change|total\"),  #>     as.integer), dplyr::across(tidyselect::matches(\"^date\"),  #>     as.Date), last_updated = as.POSIXct(.data$last_updated, tz = \"America/Regina\")) glimpse(reports_overall) #> Rows: 727 #> Columns: 22 #> $ last_updated                <dttm> 2022-01-20 18:10:02, 2022-01-20 18:10:02,~ #> $ date                        <date> 2020-01-25, 2020-01-26, 2020-01-27, 2020-~ #> $ change_cases                <int> 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, ~ #> $ change_fatalities           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ change_tests                <int> 2, 4, 20, 10, 3, 26, 33, 23, 24, 16, 56, 5~ #> $ change_hospitalizations     <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ change_criticals            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ change_recoveries           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ change_vaccinations         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ change_vaccinated           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ change_boosters_1           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ change_vaccines_distributed <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ total_cases                 <int> 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 5, 7, 7, ~ #> $ total_fatalities            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ total_tests                 <int> 2, 6, 26, 36, 39, 65, 98, 121, 145, 161, 2~ #> $ total_hospitalizations      <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ total_criticals             <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ total_recoveries            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ total_vaccinations          <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ total_vaccinated            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ total_boosters_1            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ #> $ total_vaccines_distributed  <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~ reports_ns_fatalities_2021 <-   get_reports(province = \"NS\", stat = \"fatalities\",               after = \"2021-01-01\", before = \"2021-12-31\") glimpse(reports_ns_fatalities_2021) #> Rows: 365 #> Columns: 5 #> $ province          <chr> \"NS\", \"NS\", \"NS\", \"NS\", \"NS\", \"NS\", \"NS\", \"NS\", \"NS\"~ #> $ last_updated      <dttm> 2022-01-20 14:12:04, 2022-01-20 14:12:04, 2022-01-2~ #> $ date              <date> 2021-01-01, 2021-01-02, 2021-01-03, 2021-01-04, 202~ #> $ change_fatalities <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0~ #> $ total_fatalities  <int> 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, ~"},{"path":"https://taylordunn.github.io/canadacovid/index.html","id":"to-do","dir":"","previous_headings":"","what":"To-do","title":"API Wrapper for the Canadian COVID-19 Tracker","text":"Consider adding memoise functionality avoid repeated API requests.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_content_parsed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get content and parse it — get_content_parsed","title":"Get content and parse it — get_content_parsed","text":"Sends GET request https://api.covid19tracker.ca/. request successful returned content JSON, formats returns parsed (via jsonlite::fromJSON).","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_content_parsed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get content and parse it — get_content_parsed","text":"","code":"get_content_parsed(url)"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_content_parsed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get content and parse it — get_content_parsed","text":"url string URL linking API. contain base \"https://api.covid19tracker.ca\", url combined base attempt make valid URL (return warning).","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_content_parsed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get content and parse it — get_content_parsed","text":"list.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_content_parsed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get content and parse it — get_content_parsed","text":"","code":"get_content_parsed(\"https://api.covid19tracker.ca/provinces\") #> [[1]] #> [[1]]$id #> [1] 1 #>  #> [[1]]$code #> [1] \"ON\" #>  #> [[1]]$name #> [1] \"Ontario\" #>  #> [[1]]$data_source #> NULL #>  #> [[1]]$population #> [1] 14826276 #>  #> [[1]]$area #> [1] 917741 #>  #> [[1]]$gdp #> [1] 857384 #>  #> [[1]]$geographic #> [1] 1 #>  #> [[1]]$data_status #> [1] \"Reported\" #>  #> [[1]]$created_at #> NULL #>  #> [[1]]$updated_at #> [1] \"2022-01-20T23:53:08.000000Z\" #>  #> [[1]]$density #> [1] 16.15519 #>  #>  #> [[2]] #> [[2]]$id #> [1] 2 #>  #> [[2]]$code #> [1] \"QC\" #>  #> [[2]]$name #> [1] \"Quebec\" #>  #> [[2]]$data_source #> NULL #>  #> [[2]]$population #> [1] 8604495 #>  #> [[2]]$area #> [1] 1356128 #>  #> [[2]]$gdp #> [1] 439375 #>  #> [[2]]$geographic #> [1] 1 #>  #> [[2]]$data_status #> [1] \"In progress\" #>  #> [[2]]$created_at #> NULL #>  #> [[2]]$updated_at #> [1] \"2022-01-20T16:11:24.000000Z\" #>  #> [[2]]$density #> [1] 6.344899 #>  #>  #> [[3]] #> [[3]]$id #> [1] 3 #>  #> [[3]]$code #> [1] \"NS\" #>  #> [[3]]$name #> [1] \"Nova Scotia\" #>  #> [[3]]$data_source #> NULL #>  #> [[3]]$population #> [1] 992055 #>  #> [[3]]$area #> [1] 53338 #>  #> [[3]]$gdp #> [1] 44354 #>  #> [[3]]$geographic #> [1] 1 #>  #> [[3]]$data_status #> [1] \"Reported\" #>  #> [[3]]$created_at #> NULL #>  #> [[3]]$updated_at #> [1] \"2022-01-20T20:12:04.000000Z\" #>  #> [[3]]$density #> [1] 18.5994 #>  #>  #> [[4]] #> [[4]]$id #> [1] 4 #>  #> [[4]]$code #> [1] \"NB\" #>  #> [[4]]$name #> [1] \"New Brunswick\" #>  #> [[4]]$data_source #> NULL #>  #> [[4]]$population #> [1] 789225 #>  #> [[4]]$area #> [1] 71450 #>  #> [[4]]$gdp #> [1] 36966 #>  #> [[4]]$geographic #> [1] 1 #>  #> [[4]]$data_status #> [1] \"Reported\" #>  #> [[4]]$created_at #> NULL #>  #> [[4]]$updated_at #> [1] \"2022-01-20T20:10:07.000000Z\" #>  #> [[4]]$density #> [1] 11.04584 #>  #>  #> [[5]] #> [[5]]$id #> [1] 5 #>  #> [[5]]$code #> [1] \"MB\" #>  #> [[5]]$name #> [1] \"Manitoba\" #>  #> [[5]]$data_source #> NULL #>  #> [[5]]$population #> [1] 1383765 #>  #> [[5]]$area #> [1] 553556 #>  #> [[5]]$gdp #> [1] 72688 #>  #> [[5]]$geographic #> [1] 1 #>  #> [[5]]$data_status #> [1] \"Reported\" #>  #> [[5]]$created_at #> NULL #>  #> [[5]]$updated_at #> [1] \"2022-01-20T18:50:21.000000Z\" #>  #> [[5]]$density #> [1] 2.499774 #>  #>  #> [[6]] #> [[6]]$id #> [1] 6 #>  #> [[6]]$code #> [1] \"BC\" #>  #> [[6]]$name #> [1] \"British Columbia\" #>  #> [[6]]$data_source #> NULL #>  #> [[6]]$population #> [1] 5214805 #>  #> [[6]]$area #> [1] 925186 #>  #> [[6]]$gdp #> [1] 295401 #>  #> [[6]]$geographic #> [1] 1 #>  #> [[6]]$data_status #> [1] \"Reported\" #>  #> [[6]]$created_at #> NULL #>  #> [[6]]$updated_at #> [1] \"2022-01-21T00:09:34.000000Z\" #>  #> [[6]]$density #> [1] 5.636494 #>  #>  #> [[7]] #> [[7]]$id #> [1] 7 #>  #> [[7]]$code #> [1] \"PE\" #>  #> [[7]]$name #> [1] \"Prince Edward Island\" #>  #> [[7]]$data_source #> NULL #>  #> [[7]]$population #> [1] 164318 #>  #> [[7]]$area #> [1] 5660 #>  #> [[7]]$gdp #> [1] 6994 #>  #> [[7]]$geographic #> [1] 1 #>  #> [[7]]$data_status #> [1] \"Waiting for report\" #>  #> [[7]]$created_at #> NULL #>  #> [[7]]$updated_at #> [1] \"2022-01-20T16:08:48.000000Z\" #>  #> [[7]]$density #> [1] 29.03145 #>  #>  #> [[8]] #> [[8]]$id #> [1] 8 #>  #> [[8]]$code #> [1] \"SK\" #>  #> [[8]]$name #> [1] \"Saskatchewan\" #>  #> [[8]]$data_source #> NULL #>  #> [[8]]$population #> [1] 1179844 #>  #> [[8]]$area #> [1] 591670 #>  #> [[8]]$gdp #> [1] 80679 #>  #> [[8]]$geographic #> [1] 1 #>  #> [[8]]$data_status #> [1] \"Reported\" #>  #> [[8]]$created_at #> NULL #>  #> [[8]]$updated_at #> [1] \"2022-01-20T19:40:31.000000Z\" #>  #> [[8]]$density #> [1] 1.994091 #>  #>  #> [[9]] #> [[9]]$id #> [1] 9 #>  #> [[9]]$code #> [1] \"AB\" #>  #> [[9]]$name #> [1] \"Alberta\" #>  #> [[9]]$data_source #> NULL #>  #> [[9]]$population #> [1] 4442879 #>  #> [[9]]$area #> [1] 642317 #>  #> [[9]]$gdp #> [1] 344812 #>  #> [[9]]$geographic #> [1] 1 #>  #> [[9]]$data_status #> [1] \"Reported\" #>  #> [[9]]$created_at #> NULL #>  #> [[9]]$updated_at #> [1] \"2022-01-20T23:38:06.000000Z\" #>  #> [[9]]$density #> [1] 6.916957 #>  #>  #> [[10]] #> [[10]]$id #> [1] 10 #>  #> [[10]]$code #> [1] \"NL\" #>  #> [[10]]$name #> [1] \"Newfoundland and Labrador\" #>  #> [[10]]$data_source #> NULL #>  #> [[10]]$population #> [1] 520553 #>  #> [[10]]$area #> [1] 373872 #>  #> [[10]]$gdp #> [1] 33241 #>  #> [[10]]$geographic #> [1] 1 #>  #> [[10]]$data_status #> [1] \"Waiting for report\" #>  #> [[10]]$created_at #> NULL #>  #> [[10]]$updated_at #> [1] \"2022-01-20T16:08:48.000000Z\" #>  #> [[10]]$density #> [1] 1.392329 #>  #>  #> [[11]] #> [[11]]$id #> [1] 11 #>  #> [[11]]$code #> [1] \"NT\" #>  #> [[11]]$name #> [1] \"Northwest Territories\" #>  #> [[11]]$data_source #> NULL #>  #> [[11]]$population #> [1] 45504 #>  #> [[11]]$area #> [1] 1183085 #>  #> [[11]]$gdp #> [1] 4730 #>  #> [[11]]$geographic #> [1] 1 #>  #> [[11]]$data_status #> [1] \"Waiting for report\" #>  #> [[11]]$created_at #> NULL #>  #> [[11]]$updated_at #> [1] \"2022-01-20T16:08:48.000000Z\" #>  #> [[11]]$density #> [1] 0.03846216 #>  #>  #> [[12]] #> [[12]]$id #> [1] 12 #>  #> [[12]]$code #> [1] \"YT\" #>  #> [[12]]$name #> [1] \"Yukon\" #>  #> [[12]]$data_source #> NULL #>  #> [[12]]$population #> [1] 42986 #>  #> [[12]]$area #> [1] 474391 #>  #> [[12]]$gdp #> [1] 3046 #>  #> [[12]]$geographic #> [1] 1 #>  #> [[12]]$data_status #> [1] \"Waiting for report\" #>  #> [[12]]$created_at #> NULL #>  #> [[12]]$updated_at #> [1] \"2022-01-20T16:08:48.000000Z\" #>  #> [[12]]$density #> [1] 0.09061302 #>  #>  #> [[13]] #> [[13]]$id #> [1] 13 #>  #> [[13]]$code #> [1] \"NU\" #>  #> [[13]]$name #> [1] \"Nunavut\" #>  #> [[13]]$data_source #> NULL #>  #> [[13]]$population #> [1] 39403 #>  #> [[13]]$area #> [1] 1936113 #>  #> [[13]]$gdp #> [1] 3421 #>  #> [[13]]$geographic #> [1] 1 #>  #> [[13]]$data_status #> [1] \"Waiting for report\" #>  #> [[13]]$created_at #> NULL #>  #> [[13]]$updated_at #> [1] \"2022-01-20T16:08:48.000000Z\" #>  #> [[13]]$density #> [1] 0.0203516 #>  #>  #> [[14]] #> [[14]]$id #> [1] 14 #>  #> [[14]]$code #> [1] \"_RC\" #>  #> [[14]]$name #> [1] \"Repatriated Canadians\" #>  #> [[14]]$data_source #> NULL #>  #> [[14]]$population #> NULL #>  #> [[14]]$area #> NULL #>  #> [[14]]$gdp #> NULL #>  #> [[14]]$geographic #> [1] 0 #>  #> [[14]]$data_status #> [1] \"\" #>  #> [[14]]$created_at #> NULL #>  #> [[14]]$updated_at #> NULL #>  #> [[14]]$density #> NULL #>  #>  #> [[15]] #> [[15]]$id #> [1] 15 #>  #> [[15]]$code #> [1] \"FA\" #>  #> [[15]]$name #> [1] \"Federal Allocation\" #>  #> [[15]]$data_source #> NULL #>  #> [[15]]$population #> NULL #>  #> [[15]]$area #> NULL #>  #> [[15]]$gdp #> NULL #>  #> [[15]]$geographic #> [1] 0 #>  #> [[15]]$data_status #> [1] \"\" #>  #> [[15]]$created_at #> NULL #>  #> [[15]]$updated_at #> [1] \"2022-01-08T16:57:15.000000Z\" #>  #> [[15]]$density #> NULL #>  #>  #> [[16]] #> [[16]]$id #> [1] 16 #>  #> [[16]]$code #> [1] \"NFR\" #>  #> [[16]]$name #> [1] \"National Federal Reserve\" #>  #> [[16]]$data_source #> NULL #>  #> [[16]]$population #> NULL #>  #> [[16]]$area #> NULL #>  #> [[16]]$gdp #> NULL #>  #> [[16]]$geographic #> [1] 0 #>  #> [[16]]$data_status #> [1] \"\" #>  #> [[16]]$created_at #> NULL #>  #> [[16]]$updated_at #> [1] \"2022-01-08T16:57:23.000000Z\" #>  #> [[16]]$density #> NULL #>  #>"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_provinces.html","id":null,"dir":"Reference","previous_headings":"","what":"Get provinces and territories — get_provinces","title":"Get provinces and territories — get_provinces","text":"Get provinces territories","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_provinces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get provinces and territories — get_provinces","text":"","code":"get_provinces(geo_only = TRUE)"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_provinces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get provinces and territories — get_provinces","text":"geo_only Logical, indicating provinces/territories returned. FALSE, also returned non-geographic entities like Repatriated Canadians Federal Allocation vaccinations.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_provinces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get provinces and territories — get_provinces","text":"data frame row per province/territory.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_provinces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get provinces and territories — get_provinces","text":"","code":"get_provinces() #> # A tibble: 13 × 10 #>       id code  name           population   area    gdp geographic data_status    #>    <int> <chr> <chr>               <int>  <int>  <int> <lgl>      <chr>          #>  1     1 ON    Ontario          14826276 9.18e5 857384 TRUE       Reported       #>  2     2 QC    Quebec            8604495 1.36e6 439375 TRUE       In progress    #>  3     3 NS    Nova Scotia        992055 5.33e4  44354 TRUE       Reported       #>  4     4 NB    New Brunswick      789225 7.14e4  36966 TRUE       Reported       #>  5     5 MB    Manitoba          1383765 5.54e5  72688 TRUE       Reported       #>  6     6 BC    British Colum…    5214805 9.25e5 295401 TRUE       Reported       #>  7     7 PE    Prince Edward…     164318 5.66e3   6994 TRUE       Waiting for r… #>  8     8 SK    Saskatchewan      1179844 5.92e5  80679 TRUE       Reported       #>  9     9 AB    Alberta           4442879 6.42e5 344812 TRUE       Reported       #> 10    10 NL    Newfoundland …     520553 3.74e5  33241 TRUE       Waiting for r… #> 11    11 NT    Northwest Ter…      45504 1.18e6   4730 TRUE       Waiting for r… #> 12    12 YT    Yukon               42986 4.74e5   3046 TRUE       Waiting for r… #> 13    13 NU    Nunavut             39403 1.94e6   3421 TRUE       Waiting for r… #> # … with 2 more variables: updated_at <dttm>, density <dbl> get_provinces(geo_only = FALSE) #> # A tibble: 16 × 10 #>       id code  name          population    area    gdp geographic data_status    #>    <int> <chr> <chr>              <int>   <int>  <int> <lgl>      <chr>          #>  1     1 ON    Ontario         14826276  917741 857384 TRUE       \"Reported\"     #>  2     2 QC    Quebec           8604495 1356128 439375 TRUE       \"In progress\"  #>  3     3 NS    Nova Scotia       992055   53338  44354 TRUE       \"Reported\"     #>  4     4 NB    New Brunswick     789225   71450  36966 TRUE       \"Reported\"     #>  5     5 MB    Manitoba         1383765  553556  72688 TRUE       \"Reported\"     #>  6     6 BC    British Colu…    5214805  925186 295401 TRUE       \"Reported\"     #>  7     7 PE    Prince Edwar…     164318    5660   6994 TRUE       \"Waiting for … #>  8     8 SK    Saskatchewan     1179844  591670  80679 TRUE       \"Reported\"     #>  9     9 AB    Alberta          4442879  642317 344812 TRUE       \"Reported\"     #> 10    10 NL    Newfoundland…     520553  373872  33241 TRUE       \"Waiting for … #> 11    11 NT    Northwest Te…      45504 1183085   4730 TRUE       \"Waiting for … #> 12    12 YT    Yukon              42986  474391   3046 TRUE       \"Waiting for … #> 13    13 NU    Nunavut            39403 1936113   3421 TRUE       \"Waiting for … #> 14    14 _RC   Repatriated …         NA      NA     NA FALSE      \"\"             #> 15    15 FA    Federal Allo…         NA      NA     NA FALSE      \"\"             #> 16    16 NFR   National Fed…         NA      NA     NA FALSE      \"\"             #> # … with 2 more variables: updated_at <dttm>, density <dbl>"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get health regions — get_regions","title":"Get health regions — get_regions","text":"Returns list health regions COVID-19 tracker. default (hr_uid province NULL), returns 92 regions.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get health regions — get_regions","text":"","code":"get_regions(hr_uid = NULL, province = NULL)"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get health regions — get_regions","text":"hr_uid One health region UIDs (e.g. 3553) return. province One provinces return.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get health regions — get_regions","text":"data frame row per health region.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get health regions — get_regions","text":"","code":"get_regions() #> # A tibble: 92 × 4 #>    hr_uid province engname                 frename                 #>     <int> <chr>    <chr>                   <chr>                   #>  1    471 SK       Far North               Far North               #>  2    472 SK       North                   North                   #>  3    473 SK       Central                 Central                 #>  4    474 SK       Saskatoon               Saskatoon               #>  5    475 SK       Regina                  Regina                  #>  6    476 SK       South                   South                   #>  7    591 BC       Fraser Health           Fraser Health           #>  8    592 BC       Interior Health         Interior Health         #>  9    593 BC       Vancouver Island Health Vancouver Island Health #> 10    594 BC       Northern Health         Northern Health         #> # … with 82 more rows get_regions(hr_uid = c(\"2414\", 591)) #> # A tibble: 2 × 4 #>   hr_uid province engname              frename              #>    <int> <chr>    <chr>                <chr>                #> 1   2414 QC       Région de Lanaudière Région de Lanaudière #> 2    591 BC       Fraser Health        Fraser Health        get_regions(province = c(\"ns\", \"SK\")) #> # A tibble: 10 × 4 #>    hr_uid province engname           frename           #>     <int> <chr>    <chr>             <chr>             #>  1   1201 NS       Zone 1 - Western  Zone 1 - Western  #>  2   1202 NS       Zone 2 - Northern Zone 2 - Northern #>  3   1203 NS       Zone 3 - Eastern  Zone 3 - Eastern  #>  4   1204 NS       Zone 4 - Central  Zone 4 - Central  #>  5    471 SK       Far North         Far North         #>  6    472 SK       North             North             #>  7    473 SK       Central           Central           #>  8    474 SK       Saskatoon         Saskatoon         #>  9    475 SK       Regina            Regina            #> 10    476 SK       South             South"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the day-to-day reports — get_reports","title":"Get the day-to-day reports — get_reports","text":"Runs GET request reports data COVID-19 tracker API, returns parsed data. Via split argument, data may \"overall\" (provinces/territories combined), \"province\". Alternatively, provide one two-letter codes (e.g. \"AB\") province return reports specific provinces, one numeric region codes (e.g. \"1204\") return specific health regions.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the day-to-day reports — get_reports","text":"","code":"get_reports(   split = c(\"overall\", \"province\"),   province = NULL,   region = NULL,   fill_dates = NULL,   stat = NULL,   date = NULL,   after = NULL,   before = NULL )"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the day-to-day reports — get_reports","text":"split One \"overall\", \"province\" specify data split. \"overall\" report gives cumulative numbers across Canada. Splitting \"province\" returns reports provinces/territories. province One province/territory codes (\"AB\", \"BC\", \"MB\", \"NB\", \"NL\", \"NS\", \"NT\", \"NU\", \"\", \"PE\", \"QC\", \"SK\", \"YT\") get reports. Upper, lower mixed case strings accepted. region One health region IDs get reports. Numeric character values accepted. fill_dates TRUE, response fills missing dates blank entries. stat Returns specified statistics, e.g. \"cases\". date Returns reports specified date, YYYY-MM-DD format. Returns reports specified date, YYYY-MM-DD format. Returns reports specified date, YYYY-MM-DD format.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the day-to-day reports — get_reports","text":"data frame containing reports data, one row per day. Includes province variable data split province, hr_uid variable data split health region.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_reports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the day-to-day reports — get_reports","text":"","code":"get_reports() #> # A tibble: 727 × 22 #>    last_updated        date       change_cases change_fatalities change_tests #>    <dttm>              <date>            <int>             <int>        <int> #>  1 2022-01-20 18:10:02 2020-01-25            1                 0            2 #>  2 2022-01-20 18:10:02 2020-01-26            1                 0            4 #>  3 2022-01-20 18:10:02 2020-01-27            0                 0           20 #>  4 2022-01-20 18:10:02 2020-01-28            1                 0           10 #>  5 2022-01-20 18:10:02 2020-01-29            0                 0            3 #>  6 2022-01-20 18:10:02 2020-01-30            0                 0           26 #>  7 2022-01-20 18:10:02 2020-01-31            1                 0           33 #>  8 2022-01-20 18:10:02 2020-02-01            0                 0           23 #>  9 2022-01-20 18:10:02 2020-02-02            0                 0           24 #> 10 2022-01-20 18:10:02 2020-02-03            0                 0           16 #> # … with 717 more rows, and 17 more variables: change_hospitalizations <int>, #> #   change_criticals <int>, change_recoveries <int>, change_vaccinations <int>, #> #   change_vaccinated <int>, change_boosters_1 <int>, #> #   change_vaccines_distributed <int>, total_cases <int>, #> #   total_fatalities <int>, total_tests <int>, total_hospitalizations <int>, #> #   total_criticals <int>, total_recoveries <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, … get_reports(\"province\") #> # A tibble: 9,451 × 23 #>    province last_updated        date       change_cases change_fatalities #>    <chr>    <dttm>              <date>            <int>             <int> #>  1 AB       2022-01-20 17:38:06 2020-01-25            0                 0 #>  2 AB       2022-01-20 17:38:06 2020-01-26            0                 0 #>  3 AB       2022-01-20 17:38:06 2020-01-27            0                 0 #>  4 AB       2022-01-20 17:38:06 2020-01-28            0                 0 #>  5 AB       2022-01-20 17:38:06 2020-01-29            0                 0 #>  6 AB       2022-01-20 17:38:06 2020-01-30            0                 0 #>  7 AB       2022-01-20 17:38:06 2020-01-31            0                 0 #>  8 AB       2022-01-20 17:38:06 2020-02-01            0                 0 #>  9 AB       2022-01-20 17:38:06 2020-02-02            0                 0 #> 10 AB       2022-01-20 17:38:06 2020-02-03            0                 0 #> # … with 9,441 more rows, and 18 more variables: change_tests <int>, #> #   change_hospitalizations <int>, change_criticals <int>, #> #   change_recoveries <int>, change_vaccinations <int>, #> #   change_vaccinated <int>, change_boosters_1 <int>, #> #   change_vaccines_distributed <int>, total_cases <int>, #> #   total_fatalities <int>, total_tests <int>, total_hospitalizations <int>, #> #   total_criticals <int>, total_recoveries <int>, total_vaccinations <int>, … get_reports(province = c(\"AB\", \"SK\")) #> # A tibble: 1,454 × 23 #>    province last_updated        date       change_cases change_fatalities #>    <chr>    <dttm>              <date>            <int>             <int> #>  1 AB       2022-01-20 17:38:06 2020-01-25            0                 0 #>  2 AB       2022-01-20 17:38:06 2020-01-26            0                 0 #>  3 AB       2022-01-20 17:38:06 2020-01-27            0                 0 #>  4 AB       2022-01-20 17:38:06 2020-01-28            0                 0 #>  5 AB       2022-01-20 17:38:06 2020-01-29            0                 0 #>  6 AB       2022-01-20 17:38:06 2020-01-30            0                 0 #>  7 AB       2022-01-20 17:38:06 2020-01-31            0                 0 #>  8 AB       2022-01-20 17:38:06 2020-02-01            0                 0 #>  9 AB       2022-01-20 17:38:06 2020-02-02            0                 0 #> 10 AB       2022-01-20 17:38:06 2020-02-03            0                 0 #> # … with 1,444 more rows, and 18 more variables: change_tests <int>, #> #   change_hospitalizations <int>, change_criticals <int>, #> #   change_recoveries <int>, change_vaccinations <int>, #> #   change_vaccinated <int>, change_boosters_1 <int>, #> #   change_vaccines_distributed <int>, total_cases <int>, #> #   total_fatalities <int>, total_tests <int>, total_hospitalizations <int>, #> #   total_criticals <int>, total_recoveries <int>, total_vaccinations <int>, … get_reports(region = 1204) #> # A tibble: 712 × 9 #>    hr_uid last_updated        date       change_cases change_fatalities #>     <int> <dttm>              <date>            <int>             <int> #>  1   1204 2022-01-20 18:10:02 2020-01-17            0                 0 #>  2   1204 2022-01-20 18:10:02 2020-01-18            0                 0 #>  3   1204 2022-01-20 18:10:02 2020-01-19            0                 0 #>  4   1204 2022-01-20 18:10:02 2020-01-20            0                 0 #>  5   1204 2022-01-20 18:10:02 2020-01-21            0                 0 #>  6   1204 2022-01-20 18:10:02 2020-01-22            0                 0 #>  7   1204 2022-01-20 18:10:02 2020-01-23            0                 0 #>  8   1204 2022-01-20 18:10:02 2020-01-24            0                 0 #>  9   1204 2022-01-20 18:10:02 2020-01-25            0                 0 #> 10   1204 2022-01-20 18:10:02 2020-01-26            0                 0 #> # … with 702 more rows, and 4 more variables: total_cases <int>, #> #   total_fatalities <int>, change_recoveries <int>, total_recoveries <int> get_reports(region = c(\"472\", 1204), stat = \"cases\") #> # A tibble: 1,440 × 5 #>    hr_uid last_updated        date       change_cases total_cases #>     <int> <dttm>              <date>            <int>       <int> #>  1    472 2022-01-20 18:10:02 2020-01-17            0           0 #>  2    472 2022-01-20 18:10:02 2020-01-18            0           0 #>  3    472 2022-01-20 18:10:02 2020-01-19            0           0 #>  4    472 2022-01-20 18:10:02 2020-01-20            0           0 #>  5    472 2022-01-20 18:10:02 2020-01-21            0           0 #>  6    472 2022-01-20 18:10:02 2020-01-22            0           0 #>  7    472 2022-01-20 18:10:02 2020-01-23            0           0 #>  8    472 2022-01-20 18:10:02 2020-01-24            0           0 #>  9    472 2022-01-20 18:10:02 2020-01-25            0           0 #> 10    472 2022-01-20 18:10:02 2020-01-26            0           0 #> # … with 1,430 more rows"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sub-region vaccination data — get_subregion_vaccination_data","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"Runs GET request sub-region vaccination data COVID-19 tracker API, returns parsed data. dates argument specifies time frame data: \"current\" (default; latest report sub-region), \"recent\" (15 recent reports sub-region), \"\" (returns reports one sub-regions specified subregion_code argument). get list available sub-regions, use function get_subregions().","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"","code":"get_subregion_vaccination_data(   dates = c(\"current\", \"recent\", \"all\"),   subregion_code = NULL )"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"dates One \"current\", \"recent\", \"\" specify time frame reports returned. choosing \"\" reports, must also provide one sub-region codes. subregion_code One sub-region codes. Returns reports sub-regions (even dates \"\")","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"data frame one row per sub-region report.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"Note sub-region vaccination data select provinces territories. Also percentages reported differ percent total population, percent eligible population. See API documentation details: https://api.covid19tracker.ca/docs/1.0/vaccinations.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"","code":"get_subregion_vaccination_data() #> # A tibble: 806 × 12 #>    last_updated        code  date      total_dose_1 percent_dose_1 source_dose_1 #>    <dttm>              <chr> <chr>            <int>          <dbl> <chr>         #>  1 2022-01-19 22:47:01 ON001 2021-12-…        94206          0.802 percent       #>  2 2022-01-19 22:47:01 ON002 2021-12-…        16667          0.742 percent       #>  3 2022-01-19 22:47:01 ON003 2021-12-…        42626          0.763 percent       #>  4 2022-01-19 22:47:01 ON004 2021-12-…        32777          0.782 percent       #>  5 2022-01-19 22:47:01 ON005 2021-12-…        33222          0.795 percent       #>  6 2022-01-19 22:47:01 ON006 2021-12-…        38548          0.807 percent       #>  7 2022-01-19 22:47:01 ON007 2021-12-…        26492          0.732 percent       #>  8 2022-01-19 22:47:01 ON008 2021-12-…        94323          0.762 percent       #>  9 2022-01-19 22:47:01 ON009 2021-12-…        61440          0.757 percent       #> 10 2022-01-19 22:47:01 ON010 2021-12-…        43295          0.777 percent       #> # … with 796 more rows, and 6 more variables: total_dose_2 <int>, #> #   percent_dose_2 <dbl>, source_dose_2 <chr>, total_dose_3 <int>, #> #   percent_dose_3 <dbl>, source_dose_3 <chr> get_subregion_vaccination_data(\"recent\") #> # A tibble: 2,893 × 12 #>    last_updated        date      code  total_dose_1 percent_dose_1 source_dose_1 #>    <dttm>              <chr>     <chr>        <int>          <dbl> <chr>         #>  1 2022-01-20 18:10:02 2022-01-… AB001         4608          0.734 total         #>  2 2022-01-20 18:10:02 2022-01-… AB002         6376          0.764 total         #>  3 2022-01-20 18:10:02 2022-01-… AB003         3975          0.589 total         #>  4 2022-01-20 18:10:02 2022-01-… AB004        11927          0.719 total         #>  5 2022-01-20 18:10:02 2022-01-… AB005        15317          0.593 total         #>  6 2022-01-20 18:10:02 2022-01-… AB006         9614          0.505 total         #>  7 2022-01-20 18:10:02 2022-01-… AB007         6941          0.625 total         #>  8 2022-01-20 18:10:02 2022-01-… AB008         2745          0.428 total         #>  9 2022-01-20 18:10:02 2022-01-… AB009        19222          0.693 total         #> 10 2022-01-20 18:10:02 2022-01-… AB010         2256          0.647 total         #> # … with 2,883 more rows, and 6 more variables: total_dose_2 <int>, #> #   percent_dose_2 <dbl>, source_dose_2 <chr>, total_dose_3 <int>, #> #   percent_dose_3 <dbl>, source_dose_3 <chr> get_subregion_vaccination_data(\"all\", subregion_code = c(\"ON382\", \"SK007\")) #> # A tibble: 45 × 11 #>    sub_region date       total_dose_1 percent_dose_1 source_dose_1 total_dose_2 #>    <chr>      <chr>             <int>          <dbl> <chr>                <int> #>  1 ON382      2021-10-31         9160          0.723 percent               8874 #>  2 ON382      2021-12-10         9594          0.757 percent               9047 #>  3 SK007      2021-11-14       239383          0.700 total               227727 #>  4 SK007      2021-11-15       239445          0.700 total               227949 #>  5 SK007      2021-11-16       239532          0.700 total               228094 #>  6 SK007      2021-11-17       239653          0.701 total               228378 #>  7 SK007      2021-11-18       239735          0.701 total               228557 #>  8 SK007      2021-11-21       240053          0.702 total               229537 #>  9 SK007      2021-11-22       240120          0.702 total               229745 #> 10 SK007      2021-11-23       240152          0.702 total               229833 #> # … with 35 more rows, and 5 more variables: percent_dose_2 <dbl>, #> #   source_dose_2 <chr>, total_dose_3 <int>, percent_dose_3 <dbl>, #> #   source_dose_3 <chr>"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sub-regions — get_subregions","title":"Get sub-regions — get_subregions","text":"Returns list sub-regions COVID-19 tracker. default, returns 805 sub-regions.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sub-regions — get_subregions","text":"","code":"get_subregions(subregion_code = NULL)"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sub-regions — get_subregions","text":"subregion_code One sub-regions returned.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sub-regions — get_subregions","text":"data frame row per sub-region.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sub-regions — get_subregions","text":"","code":"get_subregions() #> # A tibble: 806 × 5 #>    code  province zone  region               population #>    <chr> <chr>    <chr> <chr>                     <int> #>  1 AB001 AB       SOUTH CROWSNEST PASS             6280 #>  2 AB002 AB       SOUTH PINCHER CREEK              8344 #>  3 AB003 AB       SOUTH FORT MACLEOD               6753 #>  4 AB004 AB       SOUTH CARDSTON-KAINAI           16595 #>  5 AB005 AB       SOUTH COUNTY OF LETHBRIDGE      25820 #>  6 AB006 AB       SOUTH TABER MD                  19028 #>  7 AB007 AB       SOUTH COUNTY OF WARNER          11104 #>  8 AB008 AB       SOUTH COUNTY OF FORTY MILE       6409 #>  9 AB009 AB       SOUTH NEWELL                    27753 #> 10 AB010 AB       SOUTH OYEN                       3486 #> # … with 796 more rows get_subregions(\"AB001\") #> # A tibble: 1 × 5 #>   code  province zone  region         population #>   <chr> <chr>    <chr> <chr>               <int> #> 1 AB001 AB       SOUTH CROWSNEST PASS       6280 get_subregions(c(\"SK003\", \"SK005\")) #> # A tibble: 2 × 5 #>   code  province zone      region         population #>   <chr> <chr>    <chr>     <chr>               <int> #> 1 SK003 SK       Far North Far North East      22098 #> 2 SK005 SK       North     North Central       85750"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the most recent summary data — get_summary","title":"Get the most recent summary data — get_summary","text":"Runs GET request summary data COVID-19 tracker API, returns parsed data. Via split argument, data \"overall\" (provinces/territories combined), \"province\" (one row per province/territory) \"region\" (one row per health region).","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the most recent summary data — get_summary","text":"","code":"get_summary(split = c(\"overall\", \"province\", \"region\"))"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the most recent summary data — get_summary","text":"split One \"overall\", \"province\", \"region\" specify data split.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the most recent summary data — get_summary","text":"data frame containing summary data.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the most recent summary data — get_summary","text":"","code":"get_summary() #> # A tibble: 1 × 22 #>   last_updated        latest_date change_cases change_fatalities change_tests #>   <dttm>              <date>             <int>             <int>        <int> #> 1 2022-01-20 18:10:02 2022-01-20         23167               210        81335 #> # … with 17 more variables: change_hospitalizations <int>, #> #   change_criticals <int>, change_recoveries <int>, change_vaccinations <int>, #> #   change_vaccinated <int>, change_boosters_1 <int>, #> #   change_vaccines_distributed <int>, total_cases <int>, #> #   total_fatalities <int>, total_tests <int>, total_hospitalizations <int>, #> #   total_criticals <int>, total_recoveries <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, … get_summary(\"province\") #> # A tibble: 13 × 23 #>    last_updated        province date  change_cases change_fataliti… change_tests #>    <dttm>              <chr>    <chr>        <int>            <int>        <int> #>  1 2022-01-20 18:10:02 ON       2022…         7757               75        42907 #>  2 2022-01-20 18:10:02 QC       2022…         6528               98            0 #>  3 2022-01-20 18:10:02 NS       2022…          696                4         4459 #>  4 2022-01-20 18:10:02 NB       2022…          488                3         4580 #>  5 2022-01-20 18:10:02 MB       2022…          850                7         2450 #>  6 2022-01-20 18:10:02 BC       2022…         2150               15        12274 #>  7 2022-01-20 18:10:02 PE       2022…            0                0            0 #>  8 2022-01-20 18:10:02 SK       2022…         1171                0         3513 #>  9 2022-01-20 18:10:02 AB       2022…         3527                8        11152 #> 10 2022-01-20 18:10:02 NL       2022…            0                0            0 #> 11 2022-01-20 18:10:02 NT       2022…            0                0            0 #> 12 2022-01-20 18:10:02 YT       2022…            0                0            0 #> 13 2022-01-20 18:10:02 NU       2022…            0                0            0 #> # … with 17 more variables: change_hospitalizations <int>, #> #   change_criticals <int>, change_recoveries <int>, change_vaccinations <int>, #> #   change_vaccinated <int>, change_boosters_1 <int>, #> #   change_vaccines_distributed <int>, total_cases <int>, #> #   total_fatalities <int>, total_tests <int>, total_hospitalizations <int>, #> #   total_criticals <int>, total_recoveries <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, … get_summary(\"region\") #> # A tibble: 92 × 21 #>    last_updated        hr_uid date    change_cases change_fataliti… change_tests #>    <dttm>               <int> <chr>          <int>            <int>        <int> #>  1 2022-01-20 18:10:02   1011 2022-0…          358                2         1881 #>  2 2022-01-20 18:10:02   1012 2022-0…           65               -2          242 #>  3 2022-01-20 18:10:02   1013 2022-0…           74                0          278 #>  4 2022-01-20 18:10:02   1014 2022-0…           21                0           48 #>  5 2022-01-20 18:10:02   1100 2022-0…           NA               NA           NA #>  6 2022-01-20 18:10:02   6101 2022-0…          138                0           NA #>  7 2022-01-20 18:10:02   6001 2022-0…           35                0           93 #>  8 2022-01-20 18:10:02   6201 2022-0…           20                0            0 #>  9 2022-01-20 18:10:02   3526 2022-0…           48                0           NA #> 10 2022-01-20 18:10:02   3527 2022-0…           94                1           NA #> # … with 82 more rows, and 15 more variables: change_hospitalizations <int>, #> #   change_recoveries <int>, total_cases <int>, total_fatalities <int>, #> #   total_tests <int>, total_hospitalizations <int>, total_criticals <int>, #> #   total_recoveries <int>, total_vaccinations <int>, total_vaccinated <int>, #> #   total_boosters_1 <int>, change_vaccinations <int>, change_vaccinated <int>, #> #   change_boosters_1 <int>, change_criticals <int>"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccination_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vaccination data — get_vaccination_data","title":"Get vaccination data — get_vaccination_data","text":"Runs GET request vaccination data COVID-19 tracker API, returns parsed data. Data may returned type = \"summary\" (recent data) type = \"reports\" (day--day reports). Via split argument, data may \"overall\" (provinces/territories combined), \"province\", \"region\". Alternatively, provide one two-letter codes (e.g. \"AB\") province return reports specific provinces, one numeric region codes (e.g. \"1204\") return specific health regions.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccination_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vaccination data — get_vaccination_data","text":"","code":"get_vaccination_data(   type = c(\"summary\", \"reports\"),   split = c(\"overall\", \"province\", \"region\"),   province = NULL,   region = NULL,   fill_dates = NULL,   stat = NULL,   date = NULL,   after = NULL,   before = NULL )"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccination_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vaccination data — get_vaccination_data","text":"type One \"summary\" (recent data) \"reports\" (day--day data). split One \"overall\", \"province\", \"region\" specify data split. \"overall\" summary report gives cumulative numbers across Canada. Splitting \"province\" returns data provinces/territories. Splitting \"region\" available \"summary\" data, returns data health regions. province One province/territory codes (\"AB\", \"BC\", \"MB\", \"NB\", \"NL\", \"NS\", \"NT\", \"NU\", \"\", \"PE\", \"QC\", \"SK\", \"YT\") get reports. Upper, lower mixed case strings accepted. region One health region IDs get reports. Numeric character values accepted. fill_dates TRUE, response fills missing dates blank entries. stat Returns specified statistics, e.g. \"cases\". date Returns reports specified date, YYYY-MM-DD format. Returns reports specified date, YYYY-MM-DD format. Returns reports specified date, YYYY-MM-DD format.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccination_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get vaccination data — get_vaccination_data","text":"data frame containing vaccinations data. Includes province variable data split province, hr_uid variable data split health region.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccination_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get vaccination data — get_vaccination_data","text":"","code":"get_vaccination_data() #> # A tibble: 1 × 10 #>   last_updated        latest_date change_vaccinations change_vaccinated #>   <dttm>              <date>                    <int>             <int> #> 1 2022-01-20 18:10:02 2022-01-20               198559             14000 #> # … with 6 more variables: change_boosters_1 <int>, #> #   change_vaccines_distributed <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, #> #   total_vaccines_distributed <int> get_vaccination_data(split = \"province\") #> # A tibble: 13 × 11 #>    province last_updated        date       change_vaccinations change_vaccinated #>    <chr>    <dttm>              <chr>                    <int>             <int> #>  1 ON       2022-01-20 18:10:02 2022-01-20              104845              9205 #>  2 QC       2022-01-20 18:10:02 2022-01-20                   0                 0 #>  3 NS       2022-01-20 18:10:02 2022-01-20               18072               306 #>  4 NB       2022-01-20 18:10:02 2022-01-20               10130               307 #>  5 MB       2022-01-20 18:10:02 2022-01-20                8531               913 #>  6 BC       2022-01-20 18:10:02 2022-01-20               59042              2001 #>  7 PE       2022-01-20 18:10:02 2022-01-20                   0                 0 #>  8 SK       2022-01-20 18:10:02 2022-01-20                2020              1263 #>  9 AB       2022-01-20 18:10:02 2022-01-20               -4081                 5 #> 10 NL       2022-01-20 18:10:02 2022-01-20                   0                 0 #> 11 NT       2022-01-20 18:10:02 2022-01-20                   0                 0 #> 12 YT       2022-01-20 18:10:02 2022-01-20                   0                 0 #> 13 NU       2022-01-20 18:10:02 2022-01-20                   0                 0 #> # … with 6 more variables: change_boosters_1 <int>, #> #   change_vaccines_distributed <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, #> #   total_vaccines_distributed <int> get_vaccination_data(type = \"reports\", split = \"overall\") #> # A tibble: 727 × 10 #>    last_updated        date       change_vaccinations change_vaccinated #>    <dttm>              <date>                   <int>             <int> #>  1 2022-01-20 18:10:02 2020-01-25                   0                 0 #>  2 2022-01-20 18:10:02 2020-01-26                   0                 0 #>  3 2022-01-20 18:10:02 2020-01-27                   0                 0 #>  4 2022-01-20 18:10:02 2020-01-28                   0                 0 #>  5 2022-01-20 18:10:02 2020-01-29                   0                 0 #>  6 2022-01-20 18:10:02 2020-01-30                   0                 0 #>  7 2022-01-20 18:10:02 2020-01-31                   0                 0 #>  8 2022-01-20 18:10:02 2020-02-01                   0                 0 #>  9 2022-01-20 18:10:02 2020-02-02                   0                 0 #> 10 2022-01-20 18:10:02 2020-02-03                   0                 0 #> # … with 717 more rows, and 6 more variables: change_boosters_1 <int>, #> #   change_vaccines_distributed <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, #> #   total_vaccines_distributed <int> get_vaccination_data(type = \"reports\", split = \"overall\",                      date = \"2021-12-25\") #> # A tibble: 1 × 10 #>   last_updated        date       change_vaccinations change_vaccinated #>   <dttm>              <date>                   <int>             <int> #> 1 2022-01-20 18:10:02 2021-12-25               92411              5049 #> # … with 6 more variables: change_boosters_1 <int>, #> #   change_vaccines_distributed <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, #> #   total_vaccines_distributed <int>"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccine_age_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vaccination reports by age group — get_vaccine_age_groups","title":"Get vaccination reports by age group — get_vaccine_age_groups","text":"Runs GET request vaccination data age groups COVID-19 tracker API, returns parsed data. Via split argument, data may \"overall\" (provinces/territories combined), \"province\". Alternatively, provide one two-letter codes (e.g. \"AB\") province return reports specific provinces.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccine_age_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vaccination reports by age group — get_vaccine_age_groups","text":"","code":"get_vaccine_age_groups(   split = c(\"overall\", \"province\"),   province = NULL,   group = NULL,   before = NULL,   after = NULL )"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccine_age_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vaccination reports by age group — get_vaccine_age_groups","text":"split One \"overall\", \"province\" specify data split. \"overall\" report gives cumulative numbers across Canada. Splitting \"province\" returns reports provinces/territories. province One province/territory codes (\"AB\", \"BC\", \"MB\", \"NB\", \"NL\", \"NS\", \"NT\", \"NU\", \"\", \"PE\", \"QC\", \"SK\", \"YT\") get reports. Upper, lower mixed case strings accepted. group specific age group return, example: \"0-4\", \"05-11\", \"30-39\", \"80+\", \"not_reported\" Returns reports specified date, YYYY-MM-DD format. Returns reports specified date, YYYY-MM-DD format.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccine_age_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get vaccination reports by age group — get_vaccine_age_groups","text":"data frame , one row per age group per date. Includes province variable data split province.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccine_age_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get vaccination reports by age group — get_vaccine_age_groups","text":"","code":"get_vaccine_age_groups() #> # A tibble: 590 × 6 #>    date       group_code    full group        partial atleast1 #>    <date>     <chr>        <int> <chr>          <int>    <int> #>  1 2020-12-19 80+              0 80+              335      335 #>  2 2020-12-19 0-15             0 0-15               0        0 #>  3 2020-12-19 16-69            0 16-69          11768    11768 #>  4 2020-12-19 70-74            0 70-74            174      174 #>  5 2020-12-19 75-79            0 75-79             85       85 #>  6 2020-12-19 unknown          0 Unknown            0        0 #>  7 2020-12-19 all_ages         0 All ages       12362    12362 #>  8 2020-12-19 not_reported     0 Not reported       0        0 #>  9 2020-12-26 80+              0 80+             2229     2229 #> 10 2020-12-26 0-15             0 0-15               5        5 #> # … with 580 more rows get_vaccine_age_groups(split = \"province\") #> # A tibble: 15,695 × 7 #>    date       group_code  full group partial atleast1 province #>    <date>     <chr>      <int> <chr>   <int>    <int> <chr>    #>  1 2020-12-14 0-4            0 0-4         1        1 QC       #>  2 2020-12-14 80+            0 80+       169      169 QC       #>  3 2020-12-14 05-11          0 05-11       0        0 QC       #>  4 2020-12-14 12-17          0 12-17       0        0 QC       #>  5 2020-12-14 18-29          0 18-29       9        9 QC       #>  6 2020-12-14 30-39          0 30-39      11       11 QC       #>  7 2020-12-14 40-49          0 40-49      23       23 QC       #>  8 2020-12-14 50-59          0 50-59      22       22 QC       #>  9 2020-12-14 60-69          0 60-69      26       26 QC       #> 10 2020-12-14 70-79          0 70-79      35       35 QC       #> # … with 15,685 more rows get_vaccine_age_groups(province = c(\"AB\", \"SK\")) #> # A tibble: 3,091 × 7 #>    province date       group_code    full group        partial atleast1 #>    <chr>    <date>     <chr>        <int> <chr>          <int>    <int> #>  1 AB       2020-12-26 80+              0 80+                1        1 #>  2 AB       2020-12-26 0-15             0 0-15               0        0 #>  3 AB       2020-12-26 16-69            0 16-69           4765     4765 #>  4 AB       2020-12-26 70-74            0 70-74             22       22 #>  5 AB       2020-12-26 75-79            0 75-79              4        4 #>  6 AB       2020-12-26 unknown          0 Unknown            0        0 #>  7 AB       2020-12-26 all_ages         0 All ages        4792     4792 #>  8 AB       2020-12-26 not_reported     0 Not reported       0        0 #>  9 AB       2021-01-02 80+              0 80+              708      708 #> 10 AB       2021-01-02 0-15             0 0-15               0        0 #> # … with 3,081 more rows get_vaccine_age_groups(province = \"NS\", group = \"18-29\") #> # A tibble: 36 × 6 #>    province date        full group partial atleast1 #>    <chr>    <date>     <int> <chr>   <int>    <int> #>  1 NS       2021-04-17  3954 18-29    2459     6413 #>  2 NS       2021-04-24  4021 18-29    3592     7613 #>  3 NS       2021-05-01  4069 18-29    5192     9261 #>  4 NS       2021-05-08  4109 18-29    6276    10385 #>  5 NS       2021-05-15  4194 18-29    8023    12217 #>  6 NS       2021-05-22  4544 18-29   10800    15344 #>  7 NS       2021-05-29  4874 18-29   20669    25543 #>  8 NS       2021-06-05  4769 18-29   36129    40898 #>  9 NS       2021-06-12  5273 18-29   66881    72154 #> 10 NS       2021-06-19  6312 18-29   81947    88259 #> # … with 26 more rows get_vaccine_age_groups(group = \"80+\", after = \"2021-12-01\") #> # A tibble: 3 × 5 #>   date          full group partial atleast1 #>   <date>       <int> <chr>   <int>    <int> #> 1 2021-12-04 1630884 80+     28833  1659717 #> 2 2021-12-11 1633436 80+     28621  1662057 #> 3 2021-12-18 1637238 80+     28542  1665780"},{"path":"https://taylordunn.github.io/canadacovid/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://taylordunn.github.io/canadacovid/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://taylordunn.github.io/canadacovid/news/index.html","id":"canadacovid-033","dir":"Changelog","previous_headings":"","what":"canadacovid 0.3.3","title":"canadacovid 0.3.3","text":"Added NEWS.md file track changes package. Fixed bug last_updated variable parsed incorrectly get_reports(), get_summary(), get_subregion_vaccination_data() get_vaccine_age_groups().","code":""}]
