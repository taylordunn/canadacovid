[{"path":[]},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to canadacovid","title":"Contributing to canadacovid","text":"outlines propose change canadacovid. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to canadacovid","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to canadacovid","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to canadacovid","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"taylordunn/canadacovid\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to canadacovid","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://taylordunn.github.io/canadacovid/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to canadacovid","text":"Please note canadacovid project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://taylordunn.github.io/canadacovid/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 canadacovid authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://taylordunn.github.io/canadacovid/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with canadacovid","title":"Getting help with canadacovid","text":"Thanks using canadacovid! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://taylordunn.github.io/canadacovid/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with canadacovid","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://taylordunn.github.io/canadacovid/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with canadacovid","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://taylordunn.github.io/canadacovid/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with canadacovid","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://taylordunn.github.io/canadacovid/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Taylor Dunn. Author, maintainer.","code":""},{"path":"https://taylordunn.github.io/canadacovid/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dunn T (2022). canadacovid: API Wrapper Canadian COVID-19 Tracker. https://github.com/taylordunn/canadacovid, https://taylordunn.github.io/canadacovid/.","code":"@Manual{,   title = {canadacovid: API Wrapper for the Canadian COVID-19 Tracker},   author = {Taylor Dunn},   year = {2022},   note = {https://github.com/taylordunn/canadacovid, https://taylordunn.github.io/canadacovid/}, }"},{"path":"https://taylordunn.github.io/canadacovid/index.html","id":"canadacovid","dir":"","previous_headings":"","what":"API Wrapper for the Canadian COVID-19 Tracker","title":"API Wrapper for the Canadian COVID-19 Tracker","text":"goal canadacovid provide wrapper around API service COVID-19 Tracker Canada. see package developed, see post.","code":""},{"path":"https://taylordunn.github.io/canadacovid/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"API Wrapper for the Canadian COVID-19 Tracker","text":"Install canadacovid CRAN: can install development version canadacovid GitHub:","code":"install.packages(\"canadacovid\") #install.packages(\"remotes\") remotes::install_github(\"taylordunn/canadacovid\")"},{"path":"https://taylordunn.github.io/canadacovid/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"API Wrapper for the Canadian COVID-19 Tracker","text":"get latest summary data: default, returns aggregate data Canada. Provide split argument get summary “province” “region”: Day--day reports retrieved get_reports: function comes number arguments return specific data:","code":"library(canadacovid) library(tidyverse)  summary_overall <- get_summary() glimpse(summary_overall) #> Rows: 1 #> Columns: 24 #> $ last_updated                <dttm> 2022-05-13 00:21:50 #> $ latest_date                 <date> 2022-05-12 #> $ change_cases                <int> 3637 #> $ change_fatalities           <int> 58 #> $ change_tests                <int> 23459 #> $ change_hospitalizations     <int> -172 #> $ change_criticals            <int> -7 #> $ change_recoveries           <int> 2602 #> $ change_vaccinations         <int> 72858 #> $ change_vaccinated           <int> 2320 #> $ change_boosters_1           <int> 6781 #> $ change_boosters_2           <int> 37530 #> $ change_vaccines_distributed <int> 0 #> $ total_cases                 <int> 3792294 #> $ total_fatalities            <int> 40005 #> $ total_tests                 <int> 59814813 #> $ total_hospitalizations      <int> 6087 #> $ total_criticals             <int> 383 #> $ total_recoveries            <int> 3475157 #> $ total_vaccinations          <int> 84713309 #> $ total_vaccinated            <int> 31343697 #> $ total_boosters_1            <int> 18581632 #> $ total_boosters_2            <int> 2017868 #> $ total_vaccines_distributed  <int> 95355642 summary_province <- get_summary(split = \"province\") glimpse(summary_province) #> Rows: 13 #> Columns: 25 #> $ last_updated                <dttm> 2022-05-13 00:21:50, 2022-05-13 00:21:50,… #> $ province                    <chr> \"ON\", \"QC\", \"NS\", \"NB\", \"MB\", \"BC\", \"PE\", … #> $ date                        <chr> \"2022-05-12\", \"2022-05-12\", \"2022-05-12\", … #> $ change_cases                <int> 2160, 767, 0, 0, 0, 0, 0, 710, 0, 0, 0, 0,… #> $ change_fatalities           <int> 14, 25, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0 #> $ change_tests                <int> 16360, 0, 0, 0, 0, 0, 0, 7099, 0, 0, 0, 0,… #> $ change_hospitalizations     <int> -77, -26, 0, 0, 0, 0, 0, -69, 0, 0, 0, 0, 0 #> $ change_criticals            <int> -1, -2, 0, 0, 0, 0, 0, -4, 0, 0, 0, 0, 0 #> $ change_recoveries           <int> 2602, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> $ change_vaccinations         <int> 29173, 19893, 0, 0, 0, 0, 0, 23792, 0, 0, … #> $ change_vaccinated           <int> 1380, 465, 0, 0, 0, 0, 0, 475, 0, 0, 0, 0,… #> $ change_boosters_1           <int> 2771, 2397, 0, 0, 0, 0, 0, 1613, 0, 0, 0, … #> $ change_boosters_2           <int> 0, 16761, 0, 0, 0, 0, 0, 20769, 0, 0, 0, 0… #> $ change_vaccines_distributed <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 #> $ total_cases                 <int> 1281360, 1055277, 78174, 63490, 140931, 36… #> $ total_fatalities            <int> 13034, 15226, 336, 406, 1792, 3226, 26, 13… #> $ total_tests                 <int> 24232283, 16733572, 1777959, 782596, 14783… #> $ total_hospitalizations      <int> 1451, 1821, 66, 47, 579, 550, 13, 321, 122… #> $ total_criticals             <int> 175, 60, 17, 6, 28, 39, 0, 16, 37, 5, 0, 0… #> $ total_recoveries            <int> 1247571, 983050, 43018, 49723, 129338, 307… #> $ total_vaccinations          <int> 33027991, 20042788, 2235685, 1748729, 2863… #> $ total_vaccinated            <int> 12182139, 7158529, 842600, 659327, 1108820… #> $ total_boosters_1            <int> 7337274, 4448891, 503257, 390204, 593160, … #> $ total_boosters_2            <int> 790774, 971194, 0, 0, 0, 48479, 0, 86119, … #> $ total_vaccines_distributed  <int> 36042671, 22682919, 2458152, 2149445, 3736… reports_overall <- get_reports() glimpse(reports_overall) #> Rows: 839 #> Columns: 24 #> $ last_updated                <dttm> 2022-05-13 00:21:50, 2022-05-13 00:21:50,… #> $ date                        <date> 2020-01-25, 2020-01-26, 2020-01-27, 2020-… #> $ change_cases                <int> 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, … #> $ change_fatalities           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ change_tests                <int> 2, 4, 20, 10, 3, 26, 33, 23, 24, 16, 56, 5… #> $ change_hospitalizations     <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ change_criticals            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ change_recoveries           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ change_vaccinations         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ change_vaccinated           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ change_boosters_1           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ change_boosters_2           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ change_vaccines_distributed <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ total_cases                 <int> 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 5, 7, 7, … #> $ total_fatalities            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ total_tests                 <int> 2, 6, 26, 36, 39, 65, 98, 121, 145, 161, 2… #> $ total_hospitalizations      <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ total_criticals             <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ total_recoveries            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ total_vaccinations          <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ total_vaccinated            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ total_boosters_1            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ total_boosters_2            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ total_vaccines_distributed  <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … reports_ns_fatalities_2021 <-   get_reports(province = \"NS\", stat = \"fatalities\",               after = \"2021-01-01\", before = \"2021-12-31\") glimpse(reports_ns_fatalities_2021) #> Rows: 365 #> Columns: 5 #> $ province          <chr> \"NS\", \"NS\", \"NS\", \"NS\", \"NS\", \"NS\", \"NS\", \"NS\", \"NS\"… #> $ last_updated      <dttm> 2022-05-12 00:52:17, 2022-05-12 00:52:17, 2022-05-1… #> $ date              <date> 2021-01-01, 2021-01-02, 2021-01-03, 2021-01-04, 202… #> $ change_fatalities <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ total_fatalities  <int> 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, …"},{"path":"https://taylordunn.github.io/canadacovid/index.html","id":"to-do","dir":"","previous_headings":"","what":"To-do","title":"API Wrapper for the Canadian COVID-19 Tracker","text":"Consider adding memoise functionality avoid repeated API requests.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_content_parsed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get content and parse it — get_content_parsed","title":"Get content and parse it — get_content_parsed","text":"Sends GET request https://api.covid19tracker.ca/. request successful returned content JSON, formats returns parsed (via jsonlite::fromJSON).","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_content_parsed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get content and parse it — get_content_parsed","text":"","code":"get_content_parsed(url)"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_content_parsed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get content and parse it — get_content_parsed","text":"url string URL linking API. contain base \"https://api.covid19tracker.ca\", url combined base attempt make valid URL (return warning).","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_content_parsed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get content and parse it — get_content_parsed","text":"list.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_content_parsed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get content and parse it — get_content_parsed","text":"","code":"get_content_parsed(\"https://api.covid19tracker.ca/provinces\") #> [[1]] #> [[1]]$id #> [1] 1 #>  #> [[1]]$code #> [1] \"ON\" #>  #> [[1]]$name #> [1] \"Ontario\" #>  #> [[1]]$data_source #> NULL #>  #> [[1]]$population #> [1] 14826276 #>  #> [[1]]$area #> [1] 917741 #>  #> [[1]]$gdp #> [1] 857384 #>  #> [[1]]$geographic #> [1] 1 #>  #> [[1]]$data_status #> [1] \"Reported\" #>  #> [[1]]$created_at #> NULL #>  #> [[1]]$updated_at #> [1] \"2022-08-22T02:10:20.000000Z\" #>  #> [[1]]$density #> [1] 16.15519 #>  #>  #> [[2]] #> [[2]]$id #> [1] 2 #>  #> [[2]]$code #> [1] \"QC\" #>  #> [[2]]$name #> [1] \"Quebec\" #>  #> [[2]]$data_source #> NULL #>  #> [[2]]$population #> [1] 8604495 #>  #> [[2]]$area #> [1] 1356128 #>  #> [[2]]$gdp #> [1] 439375 #>  #> [[2]]$geographic #> [1] 1 #>  #> [[2]]$data_status #> [1] \"Reported\" #>  #> [[2]]$created_at #> NULL #>  #> [[2]]$updated_at #> [1] \"2022-08-22T10:22:17.000000Z\" #>  #> [[2]]$density #> [1] 6.344899 #>  #>  #> [[3]] #> [[3]]$id #> [1] 3 #>  #> [[3]]$code #> [1] \"NS\" #>  #> [[3]]$name #> [1] \"Nova Scotia\" #>  #> [[3]]$data_source #> NULL #>  #> [[3]]$population #> [1] 992055 #>  #> [[3]]$area #> [1] 53338 #>  #> [[3]]$gdp #> [1] 44354 #>  #> [[3]]$geographic #> [1] 1 #>  #> [[3]]$data_status #> [1] \"No report expected today\" #>  #> [[3]]$created_at #> NULL #>  #> [[3]]$updated_at #> [1] \"2022-08-15T22:52:42.000000Z\" #>  #> [[3]]$density #> [1] 18.5994 #>  #>  #> [[4]] #> [[4]]$id #> [1] 4 #>  #> [[4]]$code #> [1] \"NB\" #>  #> [[4]]$name #> [1] \"New Brunswick\" #>  #> [[4]]$data_source #> NULL #>  #> [[4]]$population #> [1] 789225 #>  #> [[4]]$area #> [1] 71450 #>  #> [[4]]$gdp #> [1] 36966 #>  #> [[4]]$geographic #> [1] 1 #>  #> [[4]]$data_status #> [1] \"Reported\" #>  #> [[4]]$created_at #> NULL #>  #> [[4]]$updated_at #> [1] \"2022-08-15T22:50:10.000000Z\" #>  #> [[4]]$density #> [1] 11.04584 #>  #>  #> [[5]] #> [[5]]$id #> [1] 5 #>  #> [[5]]$code #> [1] \"MB\" #>  #> [[5]]$name #> [1] \"Manitoba\" #>  #> [[5]]$data_source #> NULL #>  #> [[5]]$population #> [1] 1383765 #>  #> [[5]]$area #> [1] 553556 #>  #> [[5]]$gdp #> [1] 72688 #>  #> [[5]]$geographic #> [1] 1 #>  #> [[5]]$data_status #> [1] \"No report expected today\" #>  #> [[5]]$created_at #> NULL #>  #> [[5]]$updated_at #> [1] \"2022-08-15T23:01:29.000000Z\" #>  #> [[5]]$density #> [1] 2.499774 #>  #>  #> [[6]] #> [[6]]$id #> [1] 6 #>  #> [[6]]$code #> [1] \"BC\" #>  #> [[6]]$name #> [1] \"British Columbia\" #>  #> [[6]]$data_source #> NULL #>  #> [[6]]$population #> [1] 5214805 #>  #> [[6]]$area #> [1] 925186 #>  #> [[6]]$gdp #> [1] 295401 #>  #> [[6]]$geographic #> [1] 1 #>  #> [[6]]$data_status #> [1] \"Reported\" #>  #> [[6]]$created_at #> NULL #>  #> [[6]]$updated_at #> [1] \"2022-08-22T02:26:05.000000Z\" #>  #> [[6]]$density #> [1] 5.636494 #>  #>  #> [[7]] #> [[7]]$id #> [1] 7 #>  #> [[7]]$code #> [1] \"PE\" #>  #> [[7]]$name #> [1] \"Prince Edward Island\" #>  #> [[7]]$data_source #> NULL #>  #> [[7]]$population #> [1] 164318 #>  #> [[7]]$area #> [1] 5660 #>  #> [[7]]$gdp #> [1] 6994 #>  #> [[7]]$geographic #> [1] 1 #>  #> [[7]]$data_status #> [1] \"Reported\" #>  #> [[7]]$created_at #> NULL #>  #> [[7]]$updated_at #> [1] \"2022-08-15T22:50:27.000000Z\" #>  #> [[7]]$density #> [1] 29.03145 #>  #>  #> [[8]] #> [[8]]$id #> [1] 8 #>  #> [[8]]$code #> [1] \"SK\" #>  #> [[8]]$name #> [1] \"Saskatchewan\" #>  #> [[8]]$data_source #> NULL #>  #> [[8]]$population #> [1] 1179844 #>  #> [[8]]$area #> [1] 591670 #>  #> [[8]]$gdp #> [1] 80679 #>  #> [[8]]$geographic #> [1] 1 #>  #> [[8]]$data_status #> [1] \"No report expected today\" #>  #> [[8]]$created_at #> NULL #>  #> [[8]]$updated_at #> [1] \"2022-08-22T02:30:30.000000Z\" #>  #> [[8]]$density #> [1] 1.994091 #>  #>  #> [[9]] #> [[9]]$id #> [1] 9 #>  #> [[9]]$code #> [1] \"AB\" #>  #> [[9]]$name #> [1] \"Alberta\" #>  #> [[9]]$data_source #> NULL #>  #> [[9]]$population #> [1] 4442879 #>  #> [[9]]$area #> [1] 642317 #>  #> [[9]]$gdp #> [1] 344812 #>  #> [[9]]$geographic #> [1] 1 #>  #> [[9]]$data_status #> [1] \"Reported\" #>  #> [[9]]$created_at #> NULL #>  #> [[9]]$updated_at #> [1] \"2022-08-22T02:15:30.000000Z\" #>  #> [[9]]$density #> [1] 6.916957 #>  #>  #> [[10]] #> [[10]]$id #> [1] 10 #>  #> [[10]]$code #> [1] \"NL\" #>  #> [[10]]$name #> [1] \"Newfoundland and Labrador\" #>  #> [[10]]$data_source #> NULL #>  #> [[10]]$population #> [1] 520553 #>  #> [[10]]$area #> [1] 373872 #>  #> [[10]]$gdp #> [1] 33241 #>  #> [[10]]$geographic #> [1] 1 #>  #> [[10]]$data_status #> [1] \"No report expected today\" #>  #> [[10]]$created_at #> NULL #>  #> [[10]]$updated_at #> [1] \"2022-08-15T22:50:18.000000Z\" #>  #> [[10]]$density #> [1] 1.392329 #>  #>  #> [[11]] #> [[11]]$id #> [1] 11 #>  #> [[11]]$code #> [1] \"NT\" #>  #> [[11]]$name #> [1] \"Northwest Territories\" #>  #> [[11]]$data_source #> NULL #>  #> [[11]]$population #> [1] 45504 #>  #> [[11]]$area #> [1] 1183085 #>  #> [[11]]$gdp #> [1] 4730 #>  #> [[11]]$geographic #> [1] 1 #>  #> [[11]]$data_status #> [1] \"No report expected today\" #>  #> [[11]]$created_at #> NULL #>  #> [[11]]$updated_at #> [1] \"2022-08-15T22:50:34.000000Z\" #>  #> [[11]]$density #> [1] 0.03846216 #>  #>  #> [[12]] #> [[12]]$id #> [1] 12 #>  #> [[12]]$code #> [1] \"YT\" #>  #> [[12]]$name #> [1] \"Yukon\" #>  #> [[12]]$data_source #> NULL #>  #> [[12]]$population #> [1] 42986 #>  #> [[12]]$area #> [1] 474391 #>  #> [[12]]$gdp #> [1] 3046 #>  #> [[12]]$geographic #> [1] 1 #>  #> [[12]]$data_status #> [1] \"Reported\" #>  #> [[12]]$created_at #> NULL #>  #> [[12]]$updated_at #> [1] \"2022-08-15T22:51:21.000000Z\" #>  #> [[12]]$density #> [1] 0.09061302 #>  #>  #> [[13]] #> [[13]]$id #> [1] 13 #>  #> [[13]]$code #> [1] \"NU\" #>  #> [[13]]$name #> [1] \"Nunavut\" #>  #> [[13]]$data_source #> NULL #>  #> [[13]]$population #> [1] 39403 #>  #> [[13]]$area #> [1] 1936113 #>  #> [[13]]$gdp #> [1] 3421 #>  #> [[13]]$geographic #> [1] 1 #>  #> [[13]]$data_status #> [1] \"No report expected today\" #>  #> [[13]]$created_at #> NULL #>  #> [[13]]$updated_at #> [1] \"2022-08-15T22:51:02.000000Z\" #>  #> [[13]]$density #> [1] 0.0203516 #>  #>  #> [[14]] #> [[14]]$id #> [1] 14 #>  #> [[14]]$code #> [1] \"_RC\" #>  #> [[14]]$name #> [1] \"Repatriated Canadians\" #>  #> [[14]]$data_source #> NULL #>  #> [[14]]$population #> NULL #>  #> [[14]]$area #> NULL #>  #> [[14]]$gdp #> NULL #>  #> [[14]]$geographic #> [1] 0 #>  #> [[14]]$data_status #> [1] \"\" #>  #> [[14]]$created_at #> NULL #>  #> [[14]]$updated_at #> NULL #>  #> [[14]]$density #> NULL #>  #>  #> [[15]] #> [[15]]$id #> [1] 15 #>  #> [[15]]$code #> [1] \"FA\" #>  #> [[15]]$name #> [1] \"Federal Allocation\" #>  #> [[15]]$data_source #> NULL #>  #> [[15]]$population #> NULL #>  #> [[15]]$area #> NULL #>  #> [[15]]$gdp #> NULL #>  #> [[15]]$geographic #> [1] 0 #>  #> [[15]]$data_status #> [1] \"\" #>  #> [[15]]$created_at #> NULL #>  #> [[15]]$updated_at #> [1] \"2022-03-10T20:41:40.000000Z\" #>  #> [[15]]$density #> NULL #>  #>  #> [[16]] #> [[16]]$id #> [1] 16 #>  #> [[16]]$code #> [1] \"NFR\" #>  #> [[16]]$name #> [1] \"National Federal Reserve\" #>  #> [[16]]$data_source #> NULL #>  #> [[16]]$population #> NULL #>  #> [[16]]$area #> NULL #>  #> [[16]]$gdp #> NULL #>  #> [[16]]$geographic #> [1] 0 #>  #> [[16]]$data_status #> [1] \"\" #>  #> [[16]]$created_at #> NULL #>  #> [[16]]$updated_at #> [1] \"2022-08-15T22:51:36.000000Z\" #>  #> [[16]]$density #> NULL #>  #>"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_provinces.html","id":null,"dir":"Reference","previous_headings":"","what":"Get provinces and territories — get_provinces","title":"Get provinces and territories — get_provinces","text":"Get provinces territories","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_provinces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get provinces and territories — get_provinces","text":"","code":"get_provinces(geo_only = TRUE)"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_provinces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get provinces and territories — get_provinces","text":"geo_only Logical, indicating provinces/territories returned. FALSE, also returned non-geographic entities like Repatriated Canadians Federal Allocation vaccinations.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_provinces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get provinces and territories — get_provinces","text":"data frame row per province/territory.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_provinces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get provinces and territories — get_provinces","text":"","code":"get_provinces() #> # A tibble: 13 × 10 #>       id code  name    popul…¹   area    gdp geogr…² data_…³ updated_at          #>    <int> <chr> <chr>     <int>  <int>  <int> <lgl>   <chr>   <dttm>              #>  1     1 ON    Ontario  1.48e7 9.18e5 857384 TRUE    Report… 2022-08-21 20:10:20 #>  2     2 QC    Quebec   8.60e6 1.36e6 439375 TRUE    Report… 2022-08-22 04:22:17 #>  3     3 NS    Nova S…  9.92e5 5.33e4  44354 TRUE    No rep… 2022-08-15 16:52:42 #>  4     4 NB    New Br…  7.89e5 7.14e4  36966 TRUE    Report… 2022-08-15 16:50:10 #>  5     5 MB    Manito…  1.38e6 5.54e5  72688 TRUE    No rep… 2022-08-15 17:01:29 #>  6     6 BC    Britis…  5.21e6 9.25e5 295401 TRUE    Report… 2022-08-21 20:26:05 #>  7     7 PE    Prince…  1.64e5 5.66e3   6994 TRUE    Report… 2022-08-15 16:50:27 #>  8     8 SK    Saskat…  1.18e6 5.92e5  80679 TRUE    No rep… 2022-08-21 20:30:30 #>  9     9 AB    Alberta  4.44e6 6.42e5 344812 TRUE    Report… 2022-08-21 20:15:30 #> 10    10 NL    Newfou…  5.21e5 3.74e5  33241 TRUE    No rep… 2022-08-15 16:50:18 #> 11    11 NT    Northw…  4.55e4 1.18e6   4730 TRUE    No rep… 2022-08-15 16:50:34 #> 12    12 YT    Yukon    4.30e4 4.74e5   3046 TRUE    Report… 2022-08-15 16:51:21 #> 13    13 NU    Nunavut  3.94e4 1.94e6   3421 TRUE    No rep… 2022-08-15 16:51:02 #> # … with 1 more variable: density <dbl>, and abbreviated variable names #> #   ¹​population, ²​geographic, ³​data_status get_provinces(geo_only = FALSE) #> # A tibble: 16 × 10 #>       id code  name   popul…¹    area    gdp geogr…² data_…³ updated_at          #>    <int> <chr> <chr>    <int>   <int>  <int> <lgl>   <chr>   <dttm>              #>  1     1 ON    Ontar…  1.48e7  917741 857384 TRUE    \"Repor… 2022-08-21 20:10:20 #>  2     2 QC    Quebec  8.60e6 1356128 439375 TRUE    \"Repor… 2022-08-22 04:22:17 #>  3     3 NS    Nova …  9.92e5   53338  44354 TRUE    \"No re… 2022-08-15 16:52:42 #>  4     4 NB    New B…  7.89e5   71450  36966 TRUE    \"Repor… 2022-08-15 16:50:10 #>  5     5 MB    Manit…  1.38e6  553556  72688 TRUE    \"No re… 2022-08-15 17:01:29 #>  6     6 BC    Briti…  5.21e6  925186 295401 TRUE    \"Repor… 2022-08-21 20:26:05 #>  7     7 PE    Princ…  1.64e5    5660   6994 TRUE    \"Repor… 2022-08-15 16:50:27 #>  8     8 SK    Saska…  1.18e6  591670  80679 TRUE    \"No re… 2022-08-21 20:30:30 #>  9     9 AB    Alber…  4.44e6  642317 344812 TRUE    \"Repor… 2022-08-21 20:15:30 #> 10    10 NL    Newfo…  5.21e5  373872  33241 TRUE    \"No re… 2022-08-15 16:50:18 #> 11    11 NT    North…  4.55e4 1183085   4730 TRUE    \"No re… 2022-08-15 16:50:34 #> 12    12 YT    Yukon   4.30e4  474391   3046 TRUE    \"Repor… 2022-08-15 16:51:21 #> 13    13 NU    Nunav…  3.94e4 1936113   3421 TRUE    \"No re… 2022-08-15 16:51:02 #> 14    14 _RC   Repat… NA           NA     NA FALSE   \"\"      NA                  #> 15    15 FA    Feder… NA           NA     NA FALSE   \"\"      2022-03-10 14:41:40 #> 16    16 NFR   Natio… NA           NA     NA FALSE   \"\"      2022-08-15 16:51:36 #> # … with 1 more variable: density <dbl>, and abbreviated variable names #> #   ¹​population, ²​geographic, ³​data_status"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get health regions — get_regions","title":"Get health regions — get_regions","text":"Returns list health regions COVID-19 tracker. default (hr_uid province NULL), returns 92 regions.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get health regions — get_regions","text":"","code":"get_regions(hr_uid = NULL, province = NULL)"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get health regions — get_regions","text":"hr_uid One health region UIDs (e.g. 3553) return. province One provinces return.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get health regions — get_regions","text":"data frame row per health region.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get health regions — get_regions","text":"","code":"get_regions() #> # A tibble: 92 × 4 #>    hr_uid province engname                  frename                  #>     <int> <chr>    <chr>                    <chr>                    #>  1    471 SK       Far North                Far North                #>  2    472 SK       North                    North                    #>  3    473 SK       Central                  Central                  #>  4    474 SK       Saskatoon                Saskatoon                #>  5    475 SK       Regina                   Regina                   #>  6    476 SK       South                    South                    #>  7    591 BC       Interior Health          Interior Health          #>  8    592 BC       Fraser Health            Fraser Health            #>  9    593 BC       Vancouver Coastal Health Vancouver Coastal Health #> 10    594 BC       Vancouver Island Health  Vancouver Island Health  #> # … with 82 more rows get_regions(hr_uid = c(\"2414\", 591)) #> # A tibble: 2 × 4 #>   hr_uid province engname              frename              #>    <int> <chr>    <chr>                <chr>                #> 1   2414 QC       Région de Lanaudière Région de Lanaudière #> 2    591 BC       Interior Health      Interior Health      get_regions(province = c(\"ns\", \"SK\")) #> # A tibble: 10 × 4 #>    hr_uid province engname           frename           #>     <int> <chr>    <chr>             <chr>             #>  1   1201 NS       Zone 1 - Western  Zone 1 - Western  #>  2   1202 NS       Zone 2 - Northern Zone 2 - Northern #>  3   1203 NS       Zone 3 - Eastern  Zone 3 - Eastern  #>  4   1204 NS       Zone 4 - Central  Zone 4 - Central  #>  5    471 SK       Far North         Far North         #>  6    472 SK       North             North             #>  7    473 SK       Central           Central           #>  8    474 SK       Saskatoon         Saskatoon         #>  9    475 SK       Regina            Regina            #> 10    476 SK       South             South"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the day-to-day reports — get_reports","title":"Get the day-to-day reports — get_reports","text":"Runs GET request reports data COVID-19 tracker API, returns parsed data. Via split argument, data may \"overall\" (provinces/territories combined), \"province\". Alternatively, provide one two-letter codes (e.g. \"AB\") province return reports specific provinces, one numeric region codes (e.g. \"1204\") return specific health regions.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the day-to-day reports — get_reports","text":"","code":"get_reports(   split = c(\"overall\", \"province\"),   province = NULL,   region = NULL,   fill_dates = NULL,   stat = NULL,   date = NULL,   after = NULL,   before = NULL )"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the day-to-day reports — get_reports","text":"split One \"overall\", \"province\" specify data split. \"overall\" report gives cumulative numbers across Canada. Splitting \"province\" returns reports provinces/territories. province One province/territory codes (\"AB\", \"BC\", \"MB\", \"NB\", \"NL\", \"NS\", \"NT\", \"NU\", \"\", \"PE\", \"QC\", \"SK\", \"YT\") get reports. Upper, lower mixed case strings accepted. region One health region IDs get reports. Numeric character values accepted. fill_dates TRUE, response fills missing dates blank entries. stat Returns specified statistics, e.g. \"cases\". date Returns reports specified date, YYYY-MM-DD format. Returns reports specified date, YYYY-MM-DD format. Returns reports specified date, YYYY-MM-DD format.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the day-to-day reports — get_reports","text":"data frame containing reports data, one row per day. Includes province variable data split province, hr_uid variable data split health region.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_reports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the day-to-day reports — get_reports","text":"","code":"get_reports() #> # A tibble: 938 × 24 #>    last_updated        date       change_cases change_…¹ chang…² chang…³ chang…⁴ #>    <dttm>              <date>            <int>     <int>   <int>   <int>   <int> #>  1 2022-08-22 04:23:04 2020-01-25            1         0       2       0       0 #>  2 2022-08-22 04:23:04 2020-01-26            1         0       4       0       0 #>  3 2022-08-22 04:23:04 2020-01-27            0         0      20       0       0 #>  4 2022-08-22 04:23:04 2020-01-28            1         0      10       0       0 #>  5 2022-08-22 04:23:04 2020-01-29            0         0       3       0       0 #>  6 2022-08-22 04:23:04 2020-01-30            0         0      26       0       0 #>  7 2022-08-22 04:23:04 2020-01-31            1         0      33       0       0 #>  8 2022-08-22 04:23:04 2020-02-01            0         0      23       0       0 #>  9 2022-08-22 04:23:04 2020-02-02            0         0      24       0       0 #> 10 2022-08-22 04:23:04 2020-02-03            0         0      16       0       0 #> # … with 928 more rows, 17 more variables: change_recoveries <int>, #> #   change_vaccinations <int>, change_vaccinated <int>, #> #   change_boosters_1 <int>, change_boosters_2 <int>, #> #   change_vaccines_distributed <int>, total_cases <int>, #> #   total_fatalities <int>, total_tests <int>, total_hospitalizations <int>, #> #   total_criticals <int>, total_recoveries <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, total_boosters_2 <int>, … get_reports(province = c(\"AB\", \"SK\")) #> # A tibble: 1,874 × 25 #>    province last_updated        date       change_cases change…¹ chang…² chang…³ #>    <chr>    <dttm>              <date>            <int>    <int>   <int>   <int> #>  1 AB       2022-08-21 20:15:30 2020-01-25            0        0       0       0 #>  2 AB       2022-08-21 20:15:30 2020-01-26            0        0       0       0 #>  3 AB       2022-08-21 20:15:30 2020-01-27            0        0       0       0 #>  4 AB       2022-08-21 20:15:30 2020-01-28            0        0       0       0 #>  5 AB       2022-08-21 20:15:30 2020-01-29            0        0       0       0 #>  6 AB       2022-08-21 20:15:30 2020-01-30            0        0       0       0 #>  7 AB       2022-08-21 20:15:30 2020-01-31            0        0       0       0 #>  8 AB       2022-08-21 20:15:30 2020-02-01            0        0       0       0 #>  9 AB       2022-08-21 20:15:30 2020-02-02            0        0       0       0 #> 10 AB       2022-08-21 20:15:30 2020-02-03            0        0       0       0 #> # … with 1,864 more rows, 18 more variables: change_criticals <int>, #> #   change_recoveries <int>, change_vaccinations <int>, #> #   change_vaccinated <int>, change_boosters_1 <int>, change_boosters_2 <int>, #> #   change_vaccines_distributed <int>, total_cases <int>, #> #   total_fatalities <int>, total_tests <int>, total_hospitalizations <int>, #> #   total_criticals <int>, total_recoveries <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, total_boosters_2 <int>, … get_reports(region = 1204) #> # A tibble: 856 × 9 #>    hr_uid last_updated        date       chang…¹ chang…² total…³ total…⁴ chang…⁵ #>     <int> <dttm>              <date>       <int>   <int>   <int>   <int>   <int> #>  1   1204 2022-08-22 04:23:04 2020-01-15       0       0       0       0      NA #>  2   1204 2022-08-22 04:23:04 2020-01-16       0       0       0       0      NA #>  3   1204 2022-08-22 04:23:04 2020-01-17       0       0       0       0      NA #>  4   1204 2022-08-22 04:23:04 2020-01-18       0       0       0       0      NA #>  5   1204 2022-08-22 04:23:04 2020-01-19       0       0       0       0      NA #>  6   1204 2022-08-22 04:23:04 2020-01-20       0       0       0       0      NA #>  7   1204 2022-08-22 04:23:04 2020-01-21       0       0       0       0      NA #>  8   1204 2022-08-22 04:23:04 2020-01-22       0       0       0       0      NA #>  9   1204 2022-08-22 04:23:04 2020-01-23       0       0       0       0      NA #> 10   1204 2022-08-22 04:23:04 2020-01-24       0       0       0       0      NA #> # … with 846 more rows, 1 more variable: total_recoveries <int>, and #> #   abbreviated variable names ¹​change_cases, ²​change_fatalities, ³​total_cases, #> #   ⁴​total_fatalities, ⁵​change_recoveries get_reports(region = c(\"472\", 1204), stat = \"cases\") #> # A tibble: 1,710 × 5 #>    hr_uid last_updated        date       change_cases total_cases #>     <int> <dttm>              <date>            <int>       <int> #>  1    472 2022-08-22 04:23:04 2020-01-15            0           0 #>  2    472 2022-08-22 04:23:04 2020-01-16            0           0 #>  3    472 2022-08-22 04:23:04 2020-01-17            0           0 #>  4    472 2022-08-22 04:23:04 2020-01-18            0           0 #>  5    472 2022-08-22 04:23:04 2020-01-19            0           0 #>  6    472 2022-08-22 04:23:04 2020-01-20            0           0 #>  7    472 2022-08-22 04:23:04 2020-01-21            0           0 #>  8    472 2022-08-22 04:23:04 2020-01-22            0           0 #>  9    472 2022-08-22 04:23:04 2020-01-23            0           0 #> 10    472 2022-08-22 04:23:04 2020-01-24            0           0 #> # … with 1,700 more rows"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sub-region vaccination data — get_subregion_vaccination_data","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"Runs GET request sub-region vaccination data COVID-19 tracker API, returns parsed data. dates argument specifies time frame data: \"current\" (default; latest report sub-region), \"recent\" (15 recent reports sub-region), \"\" (returns reports one sub-regions specified subregion_code argument). get list available sub-regions, use function get_subregions().","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"","code":"get_subregion_vaccination_data(   dates = c(\"current\", \"recent\", \"all\"),   subregion_code = NULL )"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"dates One \"current\", \"recent\", \"\" specify time frame reports returned. choosing \"\" reports, must also provide one sub-region codes. subregion_code One sub-region codes. Returns reports sub-regions (even dates \"\")","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"data frame one row per sub-region report.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"Note sub-region vaccination data select provinces territories. Also percentages reported differ percent total population, percent eligible population. See API documentation details: https://api.covid19tracker.ca/docs/1.0/vaccinations.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregion_vaccination_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sub-region vaccination data — get_subregion_vaccination_data","text":"","code":"get_subregion_vaccination_data() #> # A tibble: 806 × 12 #>    last_updated        code  date       total_…¹ perce…² sourc…³ total…⁴ perce…⁵ #>    <dttm>              <chr> <chr>         <int>   <dbl> <chr>     <int>   <dbl> #>  1 2022-08-21 20:17:07 SK001 2022-02-06    18733   0.700 total     16875   0.631 #>  2 2022-08-21 20:17:07 SK002 2022-02-06     1959   0.683 total      1706   0.595 #>  3 2022-08-21 20:17:07 SK003 2022-02-06    16606   0.751 total     14655   0.663 #>  4 2022-08-21 20:17:07 SK004 2022-02-06    66614   0.863 total     58628   0.760 #>  5 2022-08-21 20:17:07 SK005 2022-02-06    67900   0.792 total     63117   0.736 #>  6 2022-08-21 20:17:07 SK006 2022-02-06    32682   0.819 total     30866   0.774 #>  7 2022-08-21 20:17:07 SK007 2022-02-06   263867   0.771 total    249513   0.729 #>  8 2022-08-21 20:17:07 SK008 2022-02-06    27576   0.766 total     26220   0.728 #>  9 2022-08-21 20:17:07 SK009 2022-02-06    75858   0.791 total     72104   0.752 #> 10 2022-08-21 20:17:07 SK010 2022-02-06   221443   0.822 total    208970   0.776 #> # … with 796 more rows, 4 more variables: source_dose_2 <chr>, #> #   total_dose_3 <int>, percent_dose_3 <dbl>, source_dose_3 <chr>, and #> #   abbreviated variable names ¹​total_dose_1, ²​percent_dose_1, ³​source_dose_1, #> #   ⁴​total_dose_2, ⁵​percent_dose_2 get_subregion_vaccination_data(\"recent\") #> # A tibble: 132 × 12 #>    last_updated        date       code  total_…¹ perce…² sourc…³ total…⁴ perce…⁵ #>    <dttm>              <chr>      <chr>    <int>   <dbl> <chr>     <int>   <dbl> #>  1 2022-08-22 04:23:04 2022-08-17 AB001     4726   0.753 total      4528   0.721 #>  2 2022-08-22 04:23:04 2022-08-17 AB002     6611   0.792 total      6251   0.749 #>  3 2022-08-22 04:23:04 2022-08-17 AB003     4119   0.610 total      3917   0.580 #>  4 2022-08-22 04:23:04 2022-08-17 AB004    12524   0.755 total     11740   0.707 #>  5 2022-08-22 04:23:04 2022-08-17 AB005    15797   0.612 total     15026   0.582 #>  6 2022-08-22 04:23:04 2022-08-17 AB006     9939   0.522 total      9506   0.500 #>  7 2022-08-22 04:23:04 2022-08-17 AB007     7148   0.644 total      6700   0.603 #>  8 2022-08-22 04:23:04 2022-08-17 AB008     2871   0.448 total      2708   0.423 #>  9 2022-08-22 04:23:04 2022-08-17 AB009    19929   0.718 total     18860   0.680 #> 10 2022-08-22 04:23:04 2022-08-17 AB010     2300   0.660 total      2216   0.636 #> # … with 122 more rows, 4 more variables: source_dose_2 <chr>, #> #   total_dose_3 <int>, percent_dose_3 <dbl>, source_dose_3 <chr>, and #> #   abbreviated variable names ¹​total_dose_1, ²​percent_dose_1, ³​source_dose_1, #> #   ⁴​total_dose_2, ⁵​percent_dose_2 get_subregion_vaccination_data(\"all\", subregion_code = c(\"ON382\", \"SK007\")) #> # A tibble: 59 × 11 #>    sub_r…¹ date  total…² perce…³ sourc…⁴ total…⁵ perce…⁶ sourc…⁷ total…⁸ perce…⁹ #>    <chr>   <chr>   <int>   <dbl> <chr>     <int>   <dbl> <chr>     <int>   <dbl> #>  1 ON382   2021…    9160   0.723 percent    8874   0.700 percent      NA NA      #>  2 ON382   2021…    9594   0.757 percent    9047   0.714 percent     446  0.0352 #>  3 ON382   2022…    9899   0.781 percent    9480   0.748 percent    5722  0.452  #>  4 SK007   2021…  239383   0.700 total    227727   0.666 total        NA NA      #>  5 SK007   2021…  239445   0.700 total    227949   0.666 total        NA NA      #>  6 SK007   2021…  239532   0.700 total    228094   0.667 total        NA NA      #>  7 SK007   2021…  239653   0.701 total    228378   0.668 total        NA NA      #>  8 SK007   2021…  239735   0.701 total    228557   0.668 total        NA NA      #>  9 SK007   2021…  240053   0.702 total    229537   0.671 total        NA NA      #> 10 SK007   2021…  240120   0.702 total    229745   0.672 total        NA NA      #> # … with 49 more rows, 1 more variable: source_dose_3 <chr>, and abbreviated #> #   variable names ¹​sub_region, ²​total_dose_1, ³​percent_dose_1, ⁴​source_dose_1, #> #   ⁵​total_dose_2, ⁶​percent_dose_2, ⁷​source_dose_2, ⁸​total_dose_3, #> #   ⁹​percent_dose_3"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sub-regions — get_subregions","title":"Get sub-regions — get_subregions","text":"Returns list sub-regions COVID-19 tracker. default, returns 805 sub-regions.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sub-regions — get_subregions","text":"","code":"get_subregions(subregion_code = NULL)"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sub-regions — get_subregions","text":"subregion_code One sub-regions returned.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sub-regions — get_subregions","text":"data frame row per sub-region.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_subregions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sub-regions — get_subregions","text":"","code":"get_subregions() #> # A tibble: 806 × 5 #>    code  province zone  region               population #>    <chr> <chr>    <chr> <chr>                     <int> #>  1 AB001 AB       SOUTH CROWSNEST PASS             6280 #>  2 AB002 AB       SOUTH PINCHER CREEK              8344 #>  3 AB003 AB       SOUTH FORT MACLEOD               6753 #>  4 AB004 AB       SOUTH CARDSTON-KAINAI           16595 #>  5 AB005 AB       SOUTH COUNTY OF LETHBRIDGE      25820 #>  6 AB006 AB       SOUTH TABER MD                  19028 #>  7 AB007 AB       SOUTH COUNTY OF WARNER          11104 #>  8 AB008 AB       SOUTH COUNTY OF FORTY MILE       6409 #>  9 AB009 AB       SOUTH NEWELL                    27753 #> 10 AB010 AB       SOUTH OYEN                       3486 #> # … with 796 more rows get_subregions(\"AB001\") #> # A tibble: 1 × 5 #>   code  province zone  region         population #>   <chr> <chr>    <chr> <chr>               <int> #> 1 AB001 AB       SOUTH CROWSNEST PASS       6280 get_subregions(c(\"SK003\", \"SK005\")) #> # A tibble: 2 × 5 #>   code  province zone      region         population #>   <chr> <chr>    <chr>     <chr>               <int> #> 1 SK003 SK       Far North Far North East      22098 #> 2 SK005 SK       North     North Central       85750"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the most recent summary data — get_summary","title":"Get the most recent summary data — get_summary","text":"Runs GET request summary data COVID-19 tracker API, returns parsed data. Via split argument, data \"overall\" (provinces/territories combined), \"province\" (one row per province/territory) \"region\" (one row per health region).","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the most recent summary data — get_summary","text":"","code":"get_summary(split = c(\"overall\", \"province\", \"region\"))"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the most recent summary data — get_summary","text":"split One \"overall\", \"province\", \"region\" specify data split.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the most recent summary data — get_summary","text":"data frame containing summary data.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the most recent summary data — get_summary","text":"","code":"get_summary() #> # A tibble: 1 × 24 #>   last_updated        latest_d…¹ chang…² chang…³ chang…⁴ chang…⁵ chang…⁶ chang…⁷ #>   <dttm>              <date>       <int>   <int>   <int>   <int>   <int>   <int> #> 1 2022-08-22 04:23:04 2022-08-22    4251      88   10820      -2       0    1863 #> # … with 16 more variables: change_vaccinations <int>, change_vaccinated <int>, #> #   change_boosters_1 <int>, change_boosters_2 <int>, #> #   change_vaccines_distributed <int>, total_cases <int>, #> #   total_fatalities <int>, total_tests <int>, total_hospitalizations <int>, #> #   total_criticals <int>, total_recoveries <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, total_boosters_2 <int>, #> #   total_vaccines_distributed <int>, and abbreviated variable names … get_summary(\"province\") #> # A tibble: 13 × 25 #>    last_updated        province date     chang…¹ chang…² chang…³ chang…⁴ chang…⁵ #>    <dttm>              <chr>    <chr>      <int>   <int>   <int>   <int>   <int> #>  1 2022-08-22 04:23:04 ON       2022-08…    1852      19   10820      -7       1 #>  2 2022-08-22 04:23:04 QC       2022-08…       0       0       0       0       0 #>  3 2022-08-22 04:23:04 NS       2022-08…       0       0       0       0       0 #>  4 2022-08-22 04:23:04 NB       2022-08…       0       0       0       0       0 #>  5 2022-08-22 04:23:04 MB       2022-08…       0       0       0       0       0 #>  6 2022-08-22 04:23:04 BC       2022-08…     875      42       0       5      -1 #>  7 2022-08-22 04:23:04 PE       2022-08…       0       0       0       0       0 #>  8 2022-08-22 04:23:04 SK       2022-08…    1524      27       0       0       0 #>  9 2022-08-22 04:23:04 AB       2022-08…       0       0       0       0       0 #> 10 2022-08-22 04:23:04 NL       2022-08…       0       0       0       0       0 #> 11 2022-08-22 04:23:04 NT       2022-08…       0       0       0       0       0 #> 12 2022-08-22 04:23:04 YT       2022-08…       0       0       0       0       0 #> 13 2022-08-22 04:23:04 NU       2022-08…       0       0       0       0       0 #> # … with 17 more variables: change_recoveries <int>, change_vaccinations <int>, #> #   change_vaccinated <int>, change_boosters_1 <int>, change_boosters_2 <int>, #> #   change_vaccines_distributed <int>, total_cases <int>, #> #   total_fatalities <int>, total_tests <int>, total_hospitalizations <int>, #> #   total_criticals <int>, total_recoveries <int>, total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, total_boosters_2 <int>, #> #   total_vaccines_distributed <int>, and abbreviated variable names … get_summary(\"region\") #> # A tibble: 92 × 21 #>    last_updated        hr_uid date       total…¹ total…² total…³ total…⁴ total…⁵ #>    <dttm>               <int> <chr>        <int>   <int>   <int>   <int>   <int> #>  1 2022-08-22 04:23:04   1201 2022-08-10       0       1     640      NA      NA #>  2 2022-08-22 04:23:04   1202 2022-08-10       0       1     943      NA      NA #>  3 2022-08-22 04:23:04   1203 2022-08-10       0       5     947      NA      NA #>  4 2022-08-22 04:23:04   1204 2022-08-10       0      58    6344      NA      NA #>  5 2022-08-22 04:23:04   4601 2022-08-10       0     207   70610   29962     198 #>  6 2022-08-22 04:23:04   4602 2022-08-10       0      13   12897  807291      70 #>  7 2022-08-22 04:23:04   4603 2022-08-10       0      16   10619  807291      25 #>  8 2022-08-22 04:23:04   4604 2022-08-10       0       7   16959  807291      36 #>  9 2022-08-22 04:23:04   4605 2022-08-10       0      58   18253    6696      30 #> 10 2022-08-22 04:23:04   1301 2022-08-10       0       2   15766  293294      NA #> # … with 82 more rows, 13 more variables: total_criticals <int>, #> #   total_vaccinations <int>, total_vaccinated <int>, total_boosters_1 <int>, #> #   total_boosters_2 <int>, change_vaccinations <int>, change_vaccinated <int>, #> #   change_boosters_1 <int>, change_cases <int>, change_fatalities <int>, #> #   change_hospitalizations <int>, change_criticals <int>, #> #   change_boosters_2 <int>, and abbreviated variable names ¹​total_cases, #> #   ²​total_fatalities, ³​total_recoveries, ⁴​total_tests, …"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccination_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vaccination data — get_vaccination_data","title":"Get vaccination data — get_vaccination_data","text":"Runs GET request vaccination data COVID-19 tracker API, returns parsed data. Data may returned type = \"summary\" (recent data) type = \"reports\" (day--day reports). Via split argument, data may \"overall\" (provinces/territories combined), \"province\", \"region\". Alternatively, provide one two-letter codes (e.g. \"AB\") province return reports specific provinces, one numeric region codes (e.g. \"1204\") return specific health regions.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccination_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vaccination data — get_vaccination_data","text":"","code":"get_vaccination_data(   type = c(\"summary\", \"reports\"),   split = c(\"overall\", \"province\", \"region\"),   province = NULL,   region = NULL,   fill_dates = NULL,   stat = NULL,   date = NULL,   after = NULL,   before = NULL )"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccination_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vaccination data — get_vaccination_data","text":"type One \"summary\" (recent data) \"reports\" (day--day data). split One \"overall\", \"province\", \"region\" specify data split. \"overall\" summary report gives cumulative numbers across Canada. Splitting \"province\" returns data provinces/territories. Splitting \"region\" available \"summary\" data, returns data health regions. province One province/territory codes (\"AB\", \"BC\", \"MB\", \"NB\", \"NL\", \"NS\", \"NT\", \"NU\", \"\", \"PE\", \"QC\", \"SK\", \"YT\") get reports. Upper, lower mixed case strings accepted. region One health region IDs get reports. Numeric character values accepted. fill_dates TRUE, response fills missing dates blank entries. stat Returns specified statistics, e.g. \"cases\". date Returns reports specified date, YYYY-MM-DD format. Returns reports specified date, YYYY-MM-DD format. Returns reports specified date, YYYY-MM-DD format.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccination_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get vaccination data — get_vaccination_data","text":"data frame containing vaccinations data. Includes province variable data split province, hr_uid variable data split health region.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccination_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get vaccination data — get_vaccination_data","text":"","code":"get_vaccination_data() #> # A tibble: 1 × 12 #>   last_updated        latest_d…¹ chang…² chang…³ chang…⁴ chang…⁵ chang…⁶ total…⁷ #>   <dttm>              <date>       <int>   <int>   <int>   <int>   <int>   <int> #> 1 2022-08-22 04:23:04 2022-08-22   55029    3680    8367   36044       0  8.82e7 #> # … with 4 more variables: total_vaccinated <int>, total_boosters_1 <int>, #> #   total_boosters_2 <int>, total_vaccines_distributed <int>, and abbreviated #> #   variable names ¹​latest_date, ²​change_vaccinations, ³​change_vaccinated, #> #   ⁴​change_boosters_1, ⁵​change_boosters_2, ⁶​change_vaccines_distributed, #> #   ⁷​total_vaccinations get_vaccination_data(split = \"province\") #> # A tibble: 13 × 13 #>    province last_updated        date     chang…¹ chang…² chang…³ chang…⁴ chang…⁵ #>    <chr>    <dttm>              <chr>      <int>   <int>   <int>   <int>   <int> #>  1 ON       2022-08-22 04:23:04 2022-08…   24478    1485    2770   17141       0 #>  2 QC       2022-08-22 04:23:04 2022-08…       0       0       0       0       0 #>  3 NS       2022-08-22 04:23:04 2022-08…       0       0       0       0       0 #>  4 NB       2022-08-22 04:23:04 2022-08…       0       0       0       0       0 #>  5 MB       2022-08-22 04:23:04 2022-08…       0       0       0       0       0 #>  6 BC       2022-08-22 04:23:04 2022-08…   24243    1408    3991   12519       0 #>  7 PE       2022-08-22 04:23:04 2022-08…       0       0       0       0       0 #>  8 SK       2022-08-22 04:23:04 2022-08…    6308     787    1606    6384       0 #>  9 AB       2022-08-22 04:23:04 2022-08…       0       0       0       0       0 #> 10 NL       2022-08-22 04:23:04 2022-08…       0       0       0       0       0 #> 11 NT       2022-08-22 04:23:04 2022-08…       0       0       0       0       0 #> 12 YT       2022-08-22 04:23:04 2022-08…       0       0       0       0       0 #> 13 NU       2022-08-22 04:23:04 2022-08…       0       0       0       0       0 #> # … with 5 more variables: total_vaccinations <int>, total_vaccinated <int>, #> #   total_boosters_1 <int>, total_boosters_2 <int>, #> #   total_vaccines_distributed <int>, and abbreviated variable names #> #   ¹​change_vaccinations, ²​change_vaccinated, ³​change_boosters_1, #> #   ⁴​change_boosters_2, ⁵​change_vaccines_distributed get_vaccination_data(type = \"reports\", split = \"overall\") #> # A tibble: 938 × 12 #>    last_updated        date       change_vacci…¹ chang…² chang…³ chang…⁴ chang…⁵ #>    <dttm>              <date>              <int>   <int>   <int>   <int>   <int> #>  1 2022-08-22 04:23:04 2020-01-25              0       0       0       0       0 #>  2 2022-08-22 04:23:04 2020-01-26              0       0       0       0       0 #>  3 2022-08-22 04:23:04 2020-01-27              0       0       0       0       0 #>  4 2022-08-22 04:23:04 2020-01-28              0       0       0       0       0 #>  5 2022-08-22 04:23:04 2020-01-29              0       0       0       0       0 #>  6 2022-08-22 04:23:04 2020-01-30              0       0       0       0       0 #>  7 2022-08-22 04:23:04 2020-01-31              0       0       0       0       0 #>  8 2022-08-22 04:23:04 2020-02-01              0       0       0       0       0 #>  9 2022-08-22 04:23:04 2020-02-02              0       0       0       0       0 #> 10 2022-08-22 04:23:04 2020-02-03              0       0       0       0       0 #> # … with 928 more rows, 5 more variables: total_vaccinations <int>, #> #   total_vaccinated <int>, total_boosters_1 <int>, total_boosters_2 <int>, #> #   total_vaccines_distributed <int>, and abbreviated variable names #> #   ¹​change_vaccinations, ²​change_vaccinated, ³​change_boosters_1, #> #   ⁴​change_boosters_2, ⁵​change_vaccines_distributed get_vaccination_data(type = \"reports\", split = \"overall\",                      date = \"2021-12-25\") #> # A tibble: 1 × 12 #>   last_updated        date       chang…¹ chang…² chang…³ chang…⁴ chang…⁵ total…⁶ #>   <dttm>              <date>       <int>   <int>   <int>   <int>   <int>   <int> #> 1 2022-08-22 04:23:04 2021-12-25  116846    5687  115453     395       0  6.73e7 #> # … with 4 more variables: total_vaccinated <int>, total_boosters_1 <int>, #> #   total_boosters_2 <int>, total_vaccines_distributed <int>, and abbreviated #> #   variable names ¹​change_vaccinations, ²​change_vaccinated, #> #   ³​change_boosters_1, ⁴​change_boosters_2, ⁵​change_vaccines_distributed, #> #   ⁶​total_vaccinations"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccine_age_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vaccination reports by age group — get_vaccine_age_groups","title":"Get vaccination reports by age group — get_vaccine_age_groups","text":"Runs GET request vaccination data age groups COVID-19 tracker API, returns parsed data. Via split argument, data may \"overall\" (provinces/territories combined), \"province\". Alternatively, provide one two-letter codes (e.g. \"AB\") province return reports specific provinces.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccine_age_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vaccination reports by age group — get_vaccine_age_groups","text":"","code":"get_vaccine_age_groups(   split = c(\"overall\", \"province\"),   province = NULL,   group = NULL,   before = NULL,   after = NULL )"},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccine_age_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vaccination reports by age group — get_vaccine_age_groups","text":"split One \"overall\", \"province\" specify data split. \"overall\" report gives cumulative numbers across Canada. Splitting \"province\" returns reports provinces/territories. province One province/territory codes (\"AB\", \"BC\", \"MB\", \"NB\", \"NL\", \"NS\", \"NT\", \"NU\", \"\", \"PE\", \"QC\", \"SK\", \"YT\") get reports. Upper, lower mixed case strings accepted. group specific age group return, example: \"0-4\", \"05-11\", \"30-39\", \"80+\", \"not_reported\" Returns reports specified date, YYYY-MM-DD format. Returns reports specified date, YYYY-MM-DD format.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccine_age_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get vaccination reports by age group — get_vaccine_age_groups","text":"data frame , one row per age group per date. Includes province variable data split province.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/get_vaccine_age_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get vaccination reports by age group — get_vaccine_age_groups","text":"","code":"get_vaccine_age_groups() #> # A tibble: 668 × 6 #>    date       group_code    full group        partial atleast1 #>    <date>     <chr>        <int> <chr>          <int>    <int> #>  1 2020-12-19 80+              0 80+              335      335 #>  2 2020-12-19 0-15             0 0-15               0        0 #>  3 2020-12-19 16-69            0 16-69          11768    11768 #>  4 2020-12-19 70-74            0 70-74            174      174 #>  5 2020-12-19 75-79            0 75-79             85       85 #>  6 2020-12-19 unknown          0 Unknown            0        0 #>  7 2020-12-19 all_ages         0 All ages       12362    12362 #>  8 2020-12-19 not_reported     0 Not reported       0        0 #>  9 2020-12-26 80+              0 80+             2229     2229 #> 10 2020-12-26 0-15             0 0-15               5        5 #> # … with 658 more rows get_vaccine_age_groups(split = \"province\") #> # A tibble: 17,495 × 7 #>    date       group_code  full group partial atleast1 province #>    <date>     <chr>      <int> <chr>   <int>    <int> <chr>    #>  1 2020-12-14 0-4            0 0-4         1        1 QC       #>  2 2020-12-14 80+            0 80+       169      169 QC       #>  3 2020-12-14 05-11          0 05-11       0        0 QC       #>  4 2020-12-14 12-17          0 12-17       0        0 QC       #>  5 2020-12-14 18-29          0 18-29       9        9 QC       #>  6 2020-12-14 30-39          0 30-39      11       11 QC       #>  7 2020-12-14 40-49          0 40-49      23       23 QC       #>  8 2020-12-14 50-59          0 50-59      22       22 QC       #>  9 2020-12-14 60-69          0 60-69      26       26 QC       #> 10 2020-12-14 70-79          0 70-79      35       35 QC       #> # … with 17,485 more rows get_vaccine_age_groups(province = c(\"AB\", \"SK\")) #> # A tibble: 3,489 × 7 #>    province date       group_code    full group        partial atleast1 #>    <chr>    <date>     <chr>        <int> <chr>          <int>    <int> #>  1 AB       2020-12-26 80+              0 80+                1        1 #>  2 AB       2020-12-26 0-15             0 0-15               0        0 #>  3 AB       2020-12-26 16-69            0 16-69           4765     4765 #>  4 AB       2020-12-26 70-74            0 70-74             22       22 #>  5 AB       2020-12-26 75-79            0 75-79              4        4 #>  6 AB       2020-12-26 unknown          0 Unknown            0        0 #>  7 AB       2020-12-26 all_ages         0 All ages        4792     4792 #>  8 AB       2020-12-26 not_reported     0 Not reported       0        0 #>  9 AB       2021-01-02 80+              0 80+              708      708 #> 10 AB       2021-01-02 0-15             0 0-15               0        0 #> # … with 3,479 more rows get_vaccine_age_groups(province = \"NS\", group = \"18-29\") #> # A tibble: 42 × 6 #>    province date        full group partial atleast1 #>    <chr>    <date>     <int> <chr>   <int>    <int> #>  1 NS       2021-04-17  3954 18-29    2459     6413 #>  2 NS       2021-04-24  4021 18-29    3592     7613 #>  3 NS       2021-05-01  4069 18-29    5192     9261 #>  4 NS       2021-05-08  4109 18-29    6276    10385 #>  5 NS       2021-05-15  4194 18-29    8023    12217 #>  6 NS       2021-05-22  4544 18-29   10800    15344 #>  7 NS       2021-05-29  4874 18-29   20669    25543 #>  8 NS       2021-06-05  4769 18-29   36129    40898 #>  9 NS       2021-06-12  5273 18-29   66881    72154 #> 10 NS       2021-06-19  6312 18-29   81947    88259 #> # … with 32 more rows get_vaccine_age_groups(group = \"80+\", after = \"2021-12-01\") #> # A tibble: 9 × 5 #>   date          full group partial atleast1 #>   <date>       <int> <chr>   <int>    <int> #> 1 2021-12-04 1630884 80+     28833  1659717 #> 2 2021-12-11 1633436 80+     28621  1662057 #> 3 2021-12-18 1637238 80+     28542  1665780 #> 4 2021-12-25 1640558 80+     30717  1671275 #> 5 2022-01-01 1642929 80+     30725  1673654 #> 6 2022-01-08 1647069 80+     30588  1677657 #> 7 2022-01-15 1651274 80+     30383  1681657 #> 8 2022-01-22 1655913 80+     30342  1686255 #> 9 2022-01-30 1655401 80+     30058  1685459"},{"path":"https://taylordunn.github.io/canadacovid/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://taylordunn.github.io/canadacovid/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://taylordunn.github.io/canadacovid/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://taylordunn.github.io/canadacovid/news/index.html","id":"canadacovid-034","dir":"Changelog","previous_headings":"","what":"canadacovid 0.3.4","title":"canadacovid 0.3.4","text":"API longer reliability reporting every day – series dates missing 2022-08-12 2022-08-19. account , removed tests failing missing dates.","code":""},{"path":"https://taylordunn.github.io/canadacovid/news/index.html","id":"canadacovid-033","dir":"Changelog","previous_headings":"","what":"canadacovid 0.3.3","title":"canadacovid 0.3.3","text":"CRAN release: 2022-02-07 Added NEWS.md file track changes package. Fixed bug last_updated variable parsed incorrectly get_reports(), get_summary(), get_subregion_vaccination_data() get_vaccine_age_groups(). get_provinces() function now returns updated_at CST timezone order consistent tables. , lubridate package added Imports with_tz() function. API now returns two additional variables change_boosters_2 total_boosters_2. Adjusted tests (test-reports, test-summary test-vaccination) account new variables.","code":""}]
